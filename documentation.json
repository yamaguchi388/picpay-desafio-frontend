{
    "pipes": [],
    "interfaces": [
        {
            "name": "PaymentEntity",
            "id": "interface-PaymentEntity-a2653f0ea088e5276f4436e88f51ce09bd53dfcc006f3bda91d5ab7742f570f8b7cb08fb38fb5cd537b568458b3eaa2d14a5d1677543874d82c7cdf303662826",
            "file": "src/app/domain/interfaces/entity/payment-entity.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { UserEntity } from \"./user-entity\";\n\nexport interface PaymentEntity {\n    uuid: string;\n    user: UserEntity;\n    value: number;\n    date: Date;\n    status: boolean;\n}\n",
            "properties": [
                {
                    "name": "date",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Date",
                    "optional": false,
                    "description": "",
                    "line": 7
                },
                {
                    "name": "status",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 8
                },
                {
                    "name": "user",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "UserEntity",
                    "optional": false,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "uuid",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "value",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 6
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "UserEntity",
            "id": "interface-UserEntity-a8596779b799421bfb6ffe97448150fb88b67f6b8f25152ca698d4eca8f7ac93619e828305a3fea6167034ed8da8f8b28d74aceb359c7e5051c32cebc1aee9fa",
            "file": "src/app/domain/interfaces/entity/user-entity.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface UserEntity {\n    uuid: string;\n    name: string;\n    nick: string;\n    email: string;\n    title: string;\n}\n",
            "properties": [
                {
                    "name": "email",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 3
                },
                {
                    "name": "nick",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "title",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "uuid",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 2
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        }
    ],
    "injectables": [
        {
            "name": "AuthService",
            "id": "injectable-AuthService-b5ae7b6e90db04107508e70861cae5d0554f164de20cddad75dee71330ee88c8545cdc634ab5a71a0c0bab65adfef9a3a94035d0be03ae6a5cce9ff1c1673a98",
            "file": "src/app/infra/auth/auth.service.ts",
            "properties": [
                {
                    "name": "user",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "UserEntity",
                    "optional": false,
                    "description": "",
                    "line": 11,
                    "modifierKind": [
                        121
                    ]
                }
            ],
            "methods": [
                {
                    "name": "isAuthenticated",
                    "args": [],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 21,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\r\nimport { UserEntity } from '../../domain/entity/user-entity';\r\n\r\nconst credentialsKey = 'credentials';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthService {\r\n\r\n  private user!: UserEntity;\r\n\r\n  constructor() {\r\n    const savedCredentials = sessionStorage.getItem(credentialsKey) || localStorage.getItem(credentialsKey);\r\n\r\n    if (savedCredentials) {\r\n      this.user = JSON.parse(savedCredentials);\r\n    }\r\n  }\r\n\r\n  isAuthenticated(): boolean {\r\n    return !!this.credentials;\r\n  }\r\n\r\n  get credentials(): UserEntity {\r\n    return this.user;\r\n  }\r\n\r\n  set credentials(credentials: UserEntity) {\r\n    this.user = credentials || null;\r\n\r\n    if (credentials) {\r\n      localStorage.setItem(credentialsKey, JSON.stringify(credentials));\r\n    } else {\r\n      localStorage.removeItem(credentialsKey);\r\n    }\r\n  }\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 11
            },
            "accessors": {
                "credentials": {
                    "name": "credentials",
                    "setSignature": {
                        "name": "credentials",
                        "type": "void",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "args": [
                            {
                                "name": "credentials",
                                "type": "UserEntity",
                                "deprecated": false,
                                "deprecationMessage": ""
                            }
                        ],
                        "returnType": "void",
                        "line": 29,
                        "jsdoctags": [
                            {
                                "name": "credentials",
                                "type": "UserEntity",
                                "deprecated": false,
                                "deprecationMessage": "",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    },
                    "getSignature": {
                        "name": "credentials",
                        "type": "",
                        "returnType": "UserEntity",
                        "line": 25
                    }
                }
            },
            "type": "injectable"
        },
        {
            "name": "I18nService",
            "id": "injectable-I18nService-377ba6dc32247afc872b618bd4e01b3e8784a4d9bb9c86b578b568fa2b30ce8fcc028bd17c7d8e426651c44e58d47883d498cd99cba3c46493da724579c41fbb",
            "file": "src/app/infra/translations/i18n.service.ts",
            "properties": [
                {
                    "name": "defaultLanguage",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 12
                },
                {
                    "name": "supportedLanguages",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string[]",
                    "optional": false,
                    "description": "",
                    "line": 13
                }
            ],
            "methods": [
                {
                    "name": "init",
                    "args": [
                        {
                            "name": "defaultLanguage",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "supportedLanguages",
                            "type": "string[]",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 41,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "defaultLanguage",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "supportedLanguages",
                            "type": "string[]",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\r\nimport { TranslateService, LangChangeEvent } from '@ngx-translate/core';\r\nimport { includes } from 'lodash';\r\n\r\nconst languageKey = 'language';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class I18nService {\r\n\r\n  defaultLanguage!: string;\r\n  supportedLanguages!: string[];\r\n\r\n  constructor(\r\n    private translate: TranslateService\r\n  ) { }\r\n\r\n  get language(): string {\r\n    return this.translate.currentLang;\r\n  }\r\n\r\n  set language(language: string | undefined) {\r\n    language = language || localStorage.getItem(languageKey) || this.translate.getBrowserCultureLang();\r\n\r\n    let isSupportedLanguage = includes(this.supportedLanguages, language);\r\n\r\n    if (language && !isSupportedLanguage) {\r\n      language = language.split('-')[0];\r\n      language = this.supportedLanguages.find(supportedLanguage => supportedLanguage.startsWith(language ?? this.defaultLanguage)) || '';\r\n      isSupportedLanguage = Boolean(language);\r\n    }\r\n\r\n    if (!isSupportedLanguage) {\r\n      language = this.defaultLanguage;\r\n    }\r\n\r\n    this.translate.use(language ?? this.defaultLanguage);\r\n  }\r\n\r\n  init(defaultLanguage: string, supportedLanguages: string[]) {\r\n    this.defaultLanguage = defaultLanguage;\r\n    this.supportedLanguages = supportedLanguages;\r\n    this.language = '';\r\n\r\n    this.translate.onLangChange\r\n    .subscribe((event: LangChangeEvent) => {\r\n      localStorage.setItem(languageKey, event.lang);\r\n    });\r\n  }\r\n\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "translate",
                        "type": "TranslateService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 13,
                "jsdoctags": [
                    {
                        "name": "translate",
                        "type": "TranslateService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "accessors": {
                "language": {
                    "name": "language",
                    "setSignature": {
                        "name": "language",
                        "type": "void",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "args": [
                            {
                                "name": "language",
                                "type": "string | undefined",
                                "deprecated": false,
                                "deprecationMessage": ""
                            }
                        ],
                        "returnType": "void",
                        "line": 23,
                        "jsdoctags": [
                            {
                                "name": "language",
                                "type": "string | undefined",
                                "deprecated": false,
                                "deprecationMessage": "",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    },
                    "getSignature": {
                        "name": "language",
                        "type": "string",
                        "returnType": "string",
                        "line": 19
                    }
                }
            },
            "type": "injectable"
        },
        {
            "name": "PaymentsControllerService",
            "id": "injectable-PaymentsControllerService-b9bae4748b791a0c1fd9f2168dd6cc57066c477de83aa40afd6681c59ecabe47b131b3165bf9f8317546741d11d440080fbb83a6ce5d3c008cf98d98bfb97e7c",
            "file": "src/app/presentation/controllers/payments/payments-controller.service.ts",
            "properties": [],
            "methods": [
                {
                    "name": "createPayment",
                    "args": [
                        {
                            "name": "payment",
                            "type": "PaymentEntity",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<PaymentEntity>",
                    "typeParameters": [],
                    "line": 19,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "payment",
                            "type": "PaymentEntity",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "deletePayment",
                    "args": [
                        {
                            "name": "uuid",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<PaymentEntity>",
                    "typeParameters": [],
                    "line": 27,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "uuid",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getPayments",
                    "args": [],
                    "optional": false,
                    "returnType": "Observable<PaymentEntity[]>",
                    "typeParameters": [],
                    "line": 15,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "updatePayment",
                    "args": [
                        {
                            "name": "uuid",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "payment",
                            "type": "PaymentEntity",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<PaymentEntity>",
                    "typeParameters": [],
                    "line": 23,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "uuid",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "payment",
                            "type": "PaymentEntity",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { IPaymentsController } from 'src/app/domain/interfaces/controllers/ipayments-controller';\nimport { PaymentEntity } from 'src/app/domain/interfaces/entity/payment-entity';\nimport { IPaymentsRepository } from 'src/app/domain/interfaces/repositories/ipayments-repository';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class PaymentsControllerService implements IPaymentsController {\n  constructor(\n    private paymentsRepository: IPaymentsRepository\n  ) {}\n\n  getPayments(): Observable<PaymentEntity[]> {\n    return this.paymentsRepository.getPayments();\n  }\n\n  createPayment(payment: PaymentEntity): Observable<PaymentEntity> {\n    return this.paymentsRepository.createPayment(payment);\n  }\n\n  updatePayment(uuid: number, payment: PaymentEntity): Observable<PaymentEntity> {\n    return this.paymentsRepository.updatePayment(uuid, payment);\n  }\n\n  deletePayment(uuid: number): Observable<PaymentEntity> {\n    return this.paymentsRepository.deletePayment(uuid);\n  }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "paymentsRepository",
                        "type": "IPaymentsRepository",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 10,
                "jsdoctags": [
                    {
                        "name": "paymentsRepository",
                        "type": "IPaymentsRepository",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "injectable"
        },
        {
            "name": "PaymentsRepositoryService",
            "id": "injectable-PaymentsRepositoryService-1d41871e4d830a89d64aef30b17d00696438252ef5c013b966580f80ab853d57fde719e630c9ce40da8a8f1d39d8b03a422a401314005dae8531bc819a5678a6",
            "file": "src/app/data/repositories/payments/payments-repository.service.ts",
            "properties": [],
            "methods": [
                {
                    "name": "createPayment",
                    "args": [
                        {
                            "name": "payment",
                            "type": "PaymentEntity",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<PaymentEntity>",
                    "typeParameters": [],
                    "line": 21,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "payment",
                            "type": "PaymentEntity",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "deletePayment",
                    "args": [
                        {
                            "name": "uuid",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<PaymentEntity>",
                    "typeParameters": [],
                    "line": 29,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "uuid",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getPayments",
                    "args": [],
                    "optional": false,
                    "returnType": "Observable<PaymentEntity[]>",
                    "typeParameters": [],
                    "line": 17,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "updatePayment",
                    "args": [
                        {
                            "name": "uuid",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "payment",
                            "type": "PaymentEntity",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<PaymentEntity>",
                    "typeParameters": [],
                    "line": 25,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "uuid",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "payment",
                            "type": "PaymentEntity",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { PaymentEntity } from 'src/app/domain/interfaces/entity/payment-entity';\nimport { IPaymentsRepository } from 'src/app/domain/interfaces/repositories/ipayments-repository';\nimport { environment } from 'src/environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PaymentsRepositoryService implements IPaymentsRepository {\n\n  constructor(\n    private http: HttpClient\n  ) { }\n\n  getPayments(): Observable<PaymentEntity[]> {\n    return this.http.get<PaymentEntity[]>(`${environment.serverUrl}/payments`);\n  }\n\n  createPayment(payment: PaymentEntity): Observable<PaymentEntity> {\n    return this.http.post<PaymentEntity>(`${environment.serverUrl}/payments`, payment);\n  }\n\n  updatePayment(uuid: number, payment: PaymentEntity): Observable<PaymentEntity> {\n    return this.http.put<PaymentEntity>(`${environment.serverUrl}/payments/${uuid}`, payment);\n  }\n\n  deletePayment(uuid: number): Observable<PaymentEntity> {\n    return this.http.delete<PaymentEntity>(`${environment.serverUrl}/api/payments/${uuid}`);\n  }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 11,
                "jsdoctags": [
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "injectable"
        },
        {
            "name": "RouteService",
            "id": "injectable-RouteService-e9703aa4a34e517b0f5ab6142617fdb258c4d3e785d1e9110248838b0de14328e4852209942d9b08f88c45dbf7efd2f21eb197b21169e392f45cd55a3b826f3b",
            "file": "src/app/presentation/view/pages/route.service.ts",
            "properties": [],
            "methods": [
                {
                    "name": "withShell",
                    "args": [
                        {
                            "name": "routes",
                            "type": "Routes",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "ngRoute",
                    "typeParameters": [],
                    "line": 11,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        124
                    ],
                    "jsdoctags": [
                        {
                            "name": "routes",
                            "type": "Routes",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\r\nimport { Routes, Route as ngRoute } from '@angular/router';\r\nimport { AuthGuard } from 'src/app/infra/auth/auth.guard';\r\n\r\nimport { BaseComponent } from '../base/base.component';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class RouteService {\r\n  static withShell(routes: Routes): ngRoute {\r\n    return {\r\n      path: '',\r\n      component: BaseComponent,\r\n      children: routes,\r\n      canActivate: [AuthGuard],\r\n    };\r\n  }\r\n}\r\n",
            "type": "injectable"
        },
        {
            "name": "UsersControllerService",
            "id": "injectable-UsersControllerService-4436c4f70291983e613f36de7dc3a5837dfa64bfc82ce55d315c13fb8826e5ba744c2fa2b61f354a6125081ae9162a770c33a63e2f12b2481e1a16161e0ab264",
            "file": "src/app/presentation/controllers/users/users-controller.service.ts",
            "properties": [],
            "methods": [
                {
                    "name": "login",
                    "args": [
                        {
                            "name": "param",
                            "type": "UserEntity",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<UserEntity>",
                    "typeParameters": [],
                    "line": 16,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "param",
                            "type": "UserEntity",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "logout",
                    "args": [],
                    "optional": false,
                    "returnType": "Observable<boolean>",
                    "typeParameters": [],
                    "line": 20,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { UserEntity } from 'src/app/domain/entity/user-entity';\nimport { IUsersController } from 'src/app/domain/interfaces/controllers/iusers-controller';\nimport { IUsersRepository } from 'src/app/domain/interfaces/repositories/iusers-repository';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UsersControllerService implements IUsersController {\n\n  constructor(\n    private usersRepository: IUsersRepository\n  ) { }\n\n  login(param: UserEntity): Observable<UserEntity> {\n      return this.usersRepository.login(param);\n  }\n\n  logout(): Observable<boolean> {\n    return this.usersRepository.logout();\n  }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "usersRepository",
                        "type": "IUsersRepository",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 10,
                "jsdoctags": [
                    {
                        "name": "usersRepository",
                        "type": "IUsersRepository",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "injectable"
        },
        {
            "name": "UsersRepositoryService",
            "id": "injectable-UsersRepositoryService-6a6cc5b9083ea219fbfda88f6a4eba01802b8d7d7d4fc86bd7683e650158dd9b7e60514f74a15aa5ae45203e2bd05a187e759f4e900e45eec12edac5121fd40b",
            "file": "src/app/data/repositories/users/users-repository.service.ts",
            "properties": [],
            "methods": [
                {
                    "name": "login",
                    "args": [
                        {
                            "name": "param",
                            "type": "UserEntity",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<any>",
                    "typeParameters": [],
                    "line": 17,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "param",
                            "type": "UserEntity",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "logout",
                    "args": [],
                    "optional": false,
                    "returnType": "Observable<boolean>",
                    "typeParameters": [],
                    "line": 21,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable, of } from 'rxjs';\nimport { UserEntity } from 'src/app/domain/entity/user-entity';\nimport { IUsersRepository } from 'src/app/domain/interfaces/repositories/iusers-repository';\nimport { environment } from 'src/environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UsersRepositoryService implements IUsersRepository {\n\n  constructor(\n    private http: HttpClient\n  ) { }\n\n  login(param: UserEntity): Observable<any> {\n    return this.http.get(`${environment.serverUrl}/users?email=${param.email}&password=${param.password}`);\n  }\n\n  logout(): Observable<boolean> {\n    return of(true);\n  }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 11,
                "jsdoctags": [
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "injectable"
        }
    ],
    "guards": [
        {
            "name": "AuthGuard",
            "id": "injectable-AuthGuard-9d7619de90339e6638e10d4b5dc13b89fb234376ca88bb8357e1be791481871bc5c5f3401ea6ddaac1ed23c2dd237b409a5e2e57d0ec9830477620aa6dfc2949",
            "file": "src/app/infra/auth/auth.guard.ts",
            "properties": [],
            "methods": [
                {
                    "name": "canActivate",
                    "args": [],
                    "optional": false,
                    "returnType": "Observable | Promise | boolean | UrlTree",
                    "typeParameters": [],
                    "line": 17,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\r\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree, Router } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\n\r\nimport { AuthService } from './auth.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthGuard implements CanActivate {\r\n\r\n  constructor(\r\n    private router: Router,\r\n    private authService: AuthService,\r\n  ) { }\r\n\r\n  canActivate(): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\r\n    if (this.authService.isAuthenticated()) {\r\n      return true;\r\n    }\r\n    console.log('AuthGuard: redirecting to login');\r\n    this.router.navigateByUrl('/login', { replaceUrl: true });\r\n    return false;\r\n  }\r\n\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "authService",
                        "type": "AuthService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 10,
                "jsdoctags": [
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "authService",
                        "type": "AuthService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "guard"
        }
    ],
    "interceptors": [
        {
            "name": "HttpInterceptorService",
            "id": "injectable-HttpInterceptorService-7219de1c0c7bfd3d33b3154f5ced52db6deead452489bb906f2125d0d297b14f23a8e9e75e03ed87a88852787f6d804d678730b4826758808db4b8c60c34db9c",
            "file": "src/app/infra/http/http-interceptor.service.ts",
            "properties": [],
            "methods": [
                {
                    "name": "errorHandler",
                    "args": [
                        {
                            "name": "response",
                            "type": "HttpErrorResponse",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<HttpEvent<any>>",
                    "typeParameters": [],
                    "line": 33,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "name": "response",
                            "type": "HttpErrorResponse",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "intercept",
                    "args": [
                        {
                            "name": "req",
                            "type": "HttpRequest<any>",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "next",
                            "type": "HttpHandler",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<HttpEvent<any>>",
                    "typeParameters": [],
                    "line": 19,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "req",
                            "type": "HttpRequest<any>",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "next",
                            "type": "HttpHandler",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\r\nimport { HttpInterceptor, HttpRequest, HttpHandler, HttpEvent, HttpErrorResponse } from '@angular/common/http';\r\nimport { Observable, throwError } from 'rxjs';\r\nimport { AuthService } from '../auth/auth.service';\r\nimport { catchError } from 'rxjs/operators';\r\nimport { Router } from '@angular/router';\r\nimport { Validator, ValidationError } from 'ts.validator.fluent/dist';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class HttpInterceptorService implements HttpInterceptor {\r\n\r\n  constructor(\r\n    private authService: AuthService,\r\n    private router: Router\r\n  ) { }\r\n\r\n  intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n    if (this.authService.credentials) {\r\n      req = req.clone({\r\n        setHeaders: {\r\n          Authorization: `Bearer ${this.authService.credentials.token}`\r\n        }\r\n      });\r\n\r\n      return next.handle(req).pipe(catchError(error => this.errorHandler(error)));\r\n    } else {\r\n      return next.handle(req).pipe(catchError(error => this.errorHandler(error)));\r\n    }\r\n  }\r\n\r\n  private errorHandler(response: HttpErrorResponse): Observable<HttpEvent<any>> {\r\n    let errs: any[] = [];\r\n\r\n    switch (response.status) {\r\n      case 400:\r\n        console.log('Error', response.status);\r\n        break;\r\n      case 401:\r\n        this.router.navigateByUrl('/login', { replaceUrl: true });\r\n        break;\r\n      case 404:\r\n        errs.push(new ValidationError('', '', '<strong>404</strong>: O recurso requisitado não existe.'));\r\n        break;\r\n      case 406:\r\n      case 409:\r\n      case 500:\r\n        console.log('Ocorreu um erro inesperado de servidor.');\r\n        break;\r\n    }\r\n\r\n    return throwError(errs);\r\n  }\r\n\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "authService",
                        "type": "AuthService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 12,
                "jsdoctags": [
                    {
                        "name": "authService",
                        "type": "AuthService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "interceptor"
        }
    ],
    "classes": [
        {
            "name": "IPaymentsController",
            "id": "class-IPaymentsController-a7756bbef503dff0bcfb3db7d256138f2b87dd66da997a5043ebc78bb834d515766968cb00f36b27be1ee46631502720c4ba84e45a7bd4a0ff05b7af02b382e0",
            "file": "src/app/domain/interfaces/controllers/ipayments-controller.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "import { Observable } from \"rxjs\";\r\nimport { PaymentEntity } from \"../entity/payment-entity\";\r\n\r\nexport abstract class IPaymentsController {\r\n  abstract getPayments(): Observable<PaymentEntity[]>;\r\n  abstract createPayment(payment: PaymentEntity): Observable<PaymentEntity>;\r\n  abstract updatePayment(uuid: number, payment: PaymentEntity): Observable<PaymentEntity>;\r\n  abstract deletePayment(uuid: number): Observable<PaymentEntity>;\r\n}",
            "properties": [],
            "methods": [
                {
                    "name": "createPayment",
                    "args": [
                        {
                            "name": "payment",
                            "type": "PaymentEntity",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<PaymentEntity>",
                    "typeParameters": [],
                    "line": 6,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        126
                    ],
                    "jsdoctags": [
                        {
                            "name": "payment",
                            "type": "PaymentEntity",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "deletePayment",
                    "args": [
                        {
                            "name": "uuid",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<PaymentEntity>",
                    "typeParameters": [],
                    "line": 8,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        126
                    ],
                    "jsdoctags": [
                        {
                            "name": "uuid",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getPayments",
                    "args": [],
                    "optional": false,
                    "returnType": "Observable<PaymentEntity[]>",
                    "typeParameters": [],
                    "line": 5,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        126
                    ]
                },
                {
                    "name": "updatePayment",
                    "args": [
                        {
                            "name": "uuid",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "payment",
                            "type": "PaymentEntity",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<PaymentEntity>",
                    "typeParameters": [],
                    "line": 7,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        126
                    ],
                    "jsdoctags": [
                        {
                            "name": "uuid",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "payment",
                            "type": "PaymentEntity",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "IPaymentsRepository",
            "id": "class-IPaymentsRepository-448218347cda71567ace14e8a25ebcb3da823d221e8aa5d8e3eacbbe74c0332b4eb17ac604f3525ea653a84c062685e9ccaf222ed8a132273b14fe806346d4e3",
            "file": "src/app/domain/interfaces/repositories/ipayments-repository.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "import { Observable } from 'rxjs';\r\nimport { PaymentEntity } from '../entity/payment-entity';\r\n\r\nexport abstract class IPaymentsRepository {\r\n  abstract getPayments(): Observable<PaymentEntity[]>;\r\n  abstract createPayment(payment: PaymentEntity): Observable<PaymentEntity>;\r\n  abstract updatePayment(uuid: number, payment: PaymentEntity): Observable<PaymentEntity>;\r\n  abstract deletePayment(uuid: number): Observable<PaymentEntity>;\r\n}",
            "properties": [],
            "methods": [
                {
                    "name": "createPayment",
                    "args": [
                        {
                            "name": "payment",
                            "type": "PaymentEntity",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<PaymentEntity>",
                    "typeParameters": [],
                    "line": 6,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        126
                    ],
                    "jsdoctags": [
                        {
                            "name": "payment",
                            "type": "PaymentEntity",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "deletePayment",
                    "args": [
                        {
                            "name": "uuid",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<PaymentEntity>",
                    "typeParameters": [],
                    "line": 8,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        126
                    ],
                    "jsdoctags": [
                        {
                            "name": "uuid",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getPayments",
                    "args": [],
                    "optional": false,
                    "returnType": "Observable<PaymentEntity[]>",
                    "typeParameters": [],
                    "line": 5,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        126
                    ]
                },
                {
                    "name": "updatePayment",
                    "args": [
                        {
                            "name": "uuid",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "payment",
                            "type": "PaymentEntity",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<PaymentEntity>",
                    "typeParameters": [],
                    "line": 7,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        126
                    ],
                    "jsdoctags": [
                        {
                            "name": "uuid",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "payment",
                            "type": "PaymentEntity",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "IUsersController",
            "id": "class-IUsersController-f650874842882f882e4f97a8a1ffa14c269b1b83d65f60fadbbe09ae1c8265b4e69f19119b31306ac33c08ad83f4f594e18ae5b30ac39edff56104ccfabcf984",
            "file": "src/app/domain/interfaces/controllers/iusers-controller.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "import { Observable } from \"rxjs\";\r\nimport { UserEntity } from \"../../entity/user-entity\";\r\n\r\nexport abstract class IUsersController {\r\n  abstract login(param: UserEntity): Observable<UserEntity>;\r\n  abstract logout(): Observable<boolean>;\r\n}",
            "properties": [],
            "methods": [
                {
                    "name": "login",
                    "args": [
                        {
                            "name": "param",
                            "type": "UserEntity",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<UserEntity>",
                    "typeParameters": [],
                    "line": 5,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        126
                    ],
                    "jsdoctags": [
                        {
                            "name": "param",
                            "type": "UserEntity",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "logout",
                    "args": [],
                    "optional": false,
                    "returnType": "Observable<boolean>",
                    "typeParameters": [],
                    "line": 6,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        126
                    ]
                }
            ],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "IUsersRepository",
            "id": "class-IUsersRepository-c596940c077dae85d8fdff6ea01b8f73641327b9b571b95f3b3ea3978a6452585433a2dec8d3a9d8688c4f9d90b8412aba9c97eee1864ae70d6d189ece7f49de",
            "file": "src/app/domain/interfaces/repositories/iusers-repository.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "import { Observable } from 'rxjs';\r\nimport { UserEntity } from '../../entity/user-entity';\r\n\r\nexport abstract class IUsersRepository {\r\n  abstract login(param: UserEntity): Observable<UserEntity>;\r\n  abstract logout(): Observable<boolean>;\r\n}\r\n",
            "properties": [],
            "methods": [
                {
                    "name": "login",
                    "args": [
                        {
                            "name": "param",
                            "type": "UserEntity",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<UserEntity>",
                    "typeParameters": [],
                    "line": 5,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        126
                    ],
                    "jsdoctags": [
                        {
                            "name": "param",
                            "type": "UserEntity",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "logout",
                    "args": [],
                    "optional": false,
                    "returnType": "Observable<boolean>",
                    "typeParameters": [],
                    "line": 6,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        126
                    ]
                }
            ],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "UserEntity",
            "id": "class-UserEntity-07f83cc336533d3941fdf599021f2443c566f0acff1ccbbbae7fb24b05bcf5774eb87718457f594728f200c1afca70b40f860022b5b487b768fdcf5637ddb031",
            "file": "src/app/domain/entity/user-entity.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "export class UserEntity {\r\n  uuid?: string = undefined;\r\n  name?: string = undefined;\r\n  title?: string = undefined;\r\n  nick?: string = undefined;\r\n  password?: string = undefined;\r\n  email?: string = undefined;\r\n  token?: string = undefined;\r\n}\r\n",
            "properties": [
                {
                    "name": "email",
                    "defaultValue": "undefined",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 7
                },
                {
                    "name": "name",
                    "defaultValue": "undefined",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 3
                },
                {
                    "name": "nick",
                    "defaultValue": "undefined",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "password",
                    "defaultValue": "undefined",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "title",
                    "defaultValue": "undefined",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "token",
                    "defaultValue": "undefined",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 8
                },
                {
                    "name": "uuid",
                    "defaultValue": "undefined",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 2
                }
            ],
            "methods": [],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        }
    ],
    "directives": [],
    "components": [
        {
            "name": "AddPaymentComponent",
            "id": "component-AddPaymentComponent-a2ee14c0e28a33fbed9b36c23ee71df235711c8554d282c8941aeea0a75c856e7da27f1ad1555d5a3d631369b2855ef686603ecbbf0af3a7fc674d24d268ee48",
            "file": "src/app/presentation/view/shared/dialogs/add-payment/add-payment.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-add-payment",
            "styleUrls": [
                "./add-payment.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./add-payment.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "data",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 19,
                    "decorators": [
                        {
                            "name": "Optional",
                            "stringifiedArguments": ""
                        },
                        {
                            "name": "Inject",
                            "stringifiedArguments": "MAT_DIALOG_DATA"
                        }
                    ],
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "dialogRef",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "MatDialogRef<AddPaymentComponent>",
                    "optional": false,
                    "description": "",
                    "line": 18,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "payment",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "PaymentEntity",
                    "optional": false,
                    "description": "",
                    "line": 14
                },
                {
                    "name": "paymentForm",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FormGroup",
                    "optional": false,
                    "description": "",
                    "line": 13
                }
            ],
            "methodsClass": [
                {
                    "name": "close",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 41,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "createForm",
                    "args": [],
                    "optional": false,
                    "returnType": "FormGroup",
                    "typeParameters": [],
                    "line": 29,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 25,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "save",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 45,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Inject, Input, OnInit, Optional } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { PaymentEntity } from 'src/app/domain/interfaces/entity/payment-entity';\n\n@Component({\n  selector: 'app-add-payment',\n  templateUrl: './add-payment.component.html',\n  styleUrls: ['./add-payment.component.scss']\n})\nexport class AddPaymentComponent implements OnInit {\n\n  paymentForm: FormGroup;\n  payment: PaymentEntity;\n\n  constructor(\n    private formBuilder: FormBuilder,\n    public dialogRef: MatDialogRef<AddPaymentComponent>,\n    @Optional() @Inject(MAT_DIALOG_DATA) public data: any\n  ) {\n    this.payment = data?.payment;\n    this.paymentForm = this.createForm();\n  }\n\n  ngOnInit(): void {\n    this.paymentForm = this.createForm();\n  }\n\n  createForm(): FormGroup {\n    return this.formBuilder.group({\n      user: this.formBuilder.group({\n        name: [this.payment?.user.name ?? '', Validators.required],\n        nick: [this.payment?.user.nick ?? '', Validators.required],\n      }),\n      value: [this.payment?.value ?? '', Validators.required],\n      date: [this.payment?.date.toISOString().slice(0, 16) ?? '', Validators.required],\n      title: [this.payment?.user.title ?? ''],\n    });\n  }\n\n  close(): void {\n    this.dialogRef.close();\n  }\n\n  save(): void {\n    this.dialogRef.close(this.paymentForm.value);\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".payment-form {\r\n    width: 100%;\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n    flex-direction: row;\r\n    justify-content: space-between;\r\n    margin-top: 50px;\r\n\r\n    &__input {\r\n        width: 326px;\r\n    }\r\n}\r\n\r\n.dialog-actions {\r\n    display: flex;\r\n    flex-direction: row;\r\n    justify-content: flex-end;\r\n    margin-top: 50px;\r\n\r\n    &__button:last-of-type {\r\n        margin-left: 20px;\r\n    }\r\n}",
                    "styleUrl": "./add-payment.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "formBuilder",
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "dialogRef",
                        "type": "MatDialogRef<AddPaymentComponent>",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "data",
                        "type": "any",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 14,
                "jsdoctags": [
                    {
                        "name": "formBuilder",
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "dialogRef",
                        "type": "MatDialogRef<AddPaymentComponent>",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "data",
                        "type": "any",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<h3 mat-dialog-tile>{{payment ? 'Editar' : 'Adicionar'}} pagamento</h3>\n<div mat-dialog-content>\n    <form class=\"payment-form\" [formGroup]=\"paymentForm\">\n        <mat-form-field class=\"payment-form__input\" formGroupName=\"user\" appearance=\"outline\">\n            <mat-label>Usuário</mat-label>\n            <input matInput formControlName=\"name\" placeholder=\"Usuário\">\n        </mat-form-field>\n        <mat-form-field class=\"payment-form__input\" appearance=\"outline\">\n            <mat-label>Valor</mat-label>\n            <input currencyMask matInput formControlName=\"value\" placeholder=\"Valor\" [options]=\"{ prefix: 'R$ ', thousands: '.', decimal: ',' }\">\n        </mat-form-field>\n        <mat-form-field class=\"payment-form__input\" appearance=\"outline\">\n            <mat-label>Data</mat-label>\n            <input matInput type=\"datetime-local\" formControlName=\"date\" placeholder=\"Data\">\n        </mat-form-field>\n        <mat-form-field class=\"payment-form__input\" appearance=\"outline\">\n            <mat-label>Título</mat-label>\n            <input matInput formControlName=\"title\" placeholder=\"Título\">\n        </mat-form-field>\n    </form>\n</div>\n<div mat-dialog-actions class=\"dialog-actions\">\n    <button mat-raised-button class=\"dialog-actions__button\" (click)=\"close()\">CANCELAR</button>\n    <button mat-raised-button class=\"dialog-actions__button\" type=\"submit\" color=\"primary\" (click)=\"save()\">SALVAR</button>\n</div>\n\n"
        },
        {
            "name": "AppComponent",
            "id": "component-AppComponent-ffd907fedd9a1a2df5c5958bc9548aa76ab39f25430f4f0f8d93d1d91ce3bf8a2770eb5610336e919c3146acdce7b27fb04618d6d11de9c54adc772fca5413fc",
            "file": "src/app/app.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-root",
            "styleUrls": [
                "./app.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./app.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 26,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\nimport { Router, NavigationEnd, ActivatedRoute } from '@angular/router';\nimport { Title } from '@angular/platform-browser';\nimport { TranslateService } from '@ngx-translate/core';\nimport { merge } from 'rxjs';\nimport { filter, map, mergeMap } from 'rxjs/operators';\n\nimport { I18nService } from './infra/translations/i18n.service';\nimport { environment } from 'src/environments/environment';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent implements OnInit {\n\n  constructor(\n    private router: Router,\n    private activatedRoute: ActivatedRoute,\n    private titleService: Title,\n    private translateService: TranslateService,\n    private i18nService: I18nService,\n  ) { }\n\n  ngOnInit() {\n\n    this.i18nService.init(environment.defaultLanguage, environment.supportedLanguages);\n\n    const onNavigationEnd = this.router.events.pipe(filter(event => event instanceof NavigationEnd));\n\n    merge(this.translateService.onLangChange, onNavigationEnd)\n    .pipe(\n      map(() => {\n        let route = this.activatedRoute;\n        while (route.firstChild) {\n          route = route.firstChild;\n        }\n        return route;\n      }),\n      filter(route => route.outlet === 'primary'),\n      mergeMap(route => route.data)\n      \n    )\n    .subscribe(event => {\n      const title = event['title'];\n      if (title) {\n        this.titleService.setTitle(this.translateService.instant(title));\n      }\n    });\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./app.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "activatedRoute",
                        "type": "ActivatedRoute",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "titleService",
                        "type": "Title",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "translateService",
                        "type": "TranslateService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "i18nService",
                        "type": "I18nService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 16,
                "jsdoctags": [
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "activatedRoute",
                        "type": "ActivatedRoute",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "titleService",
                        "type": "Title",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "translateService",
                        "type": "TranslateService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "i18nService",
                        "type": "I18nService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<router-outlet></router-outlet> "
        },
        {
            "name": "AvatarComponent",
            "id": "component-AvatarComponent-f3a56c5891fadd372248c9a251b489d7a10a05f02fcd5f484118bf03025b9ecf335a4dc2c31785752ceeed81f2a13b669588eae7c27ca1223741dc3678065fe0",
            "file": "src/app/presentation/view/shared/components/avatar/avatar.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-avatar",
            "styleUrls": [
                "./avatar.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./avatar.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 12,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-avatar',\n  templateUrl: './avatar.component.html',\n  styleUrls: ['./avatar.component.scss']\n})\nexport class AvatarComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".avatar {\r\n    width: 45px;\r\n    height: 45px;\r\n    border-radius: 50%;\r\n\r\n    &__img {\r\n        width: 100%;\r\n        height: 100%;\r\n        border-radius: 50%;\r\n    }\r\n}",
                    "styleUrl": "./avatar.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 8
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"avatar\">\n    <img class=\"avatar__img\" src=\"assets/img/avatar.jpg\" alt=\"Imagem de perfil do usuário\">\n</div>"
        },
        {
            "name": "BaseComponent",
            "id": "component-BaseComponent-1d4b87b029189c886f7d7bf65b7d4a134fba7e4cd33d4ce172e613237e110a57dfeb764c005f72200a2c4de49e02ce0e15dd1d159acf404df2e82723e4328545",
            "file": "src/app/presentation/view/base/base.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-base",
            "styleUrls": [
                "./base.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./base.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "logout",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 26,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 18,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "responseLogout",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 31,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { UserEntity } from 'src/app/domain/entity/user-entity';\nimport { AuthService } from 'src/app/infra/auth/auth.service';\n\n@Component({\n  selector: 'app-base',\n  templateUrl: './base.component.html',\n  styleUrls: ['./base.component.scss']\n})\nexport class BaseComponent implements OnInit {\n\n  constructor(\n    private router: Router,\n    private authService: AuthService,\n  ) { }\n\n  ngOnInit(): void {\n    console.log('teste');\n  }\n\n  get usuario(): UserEntity {\n    return this.authService.credentials;\n  }\n\n  logout() {\n    // this.usuarioController.logout()\n    // .subscribe(() => this.responseLogout());\n  }\n\n  responseLogout()  {\n    this.authService.credentials = {};\n    this.router.navigateByUrl('/login', { replaceUrl: true });\n  }\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./base.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "authService",
                        "type": "AuthService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 11,
                "jsdoctags": [
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "authService",
                        "type": "AuthService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "accessors": {
                "usuario": {
                    "name": "usuario",
                    "getSignature": {
                        "name": "usuario",
                        "type": "",
                        "returnType": "UserEntity",
                        "line": 22
                    }
                }
            },
            "templateData": "<app-nav-bar></app-nav-bar>\r\n<router-outlet></router-outlet>"
        },
        {
            "name": "DateInfoComponent",
            "id": "component-DateInfoComponent-351340318a26849965353719b03b88a02410526166b05070386ded0a407c5d0dea8425c82c1171cffae3d104f40be9509e8c651c354d02dc86262d4d168b8a45",
            "file": "src/app/presentation/view/shared/components/date-info/date-info.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-date-info",
            "styleUrls": [
                "./date-info.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./date-info.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "date",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "Date",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 14,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-date-info',\n  templateUrl: './date-info.component.html',\n  styleUrls: ['./date-info.component.scss']\n})\nexport class DateInfoComponent implements OnInit {\n\n  @Input() date!: Date;\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import \"../../../../../../variables.scss\";\r\n\r\n.hour {\r\n    color: $dark-grey;\r\n    font-size: 14px;\r\n}",
                    "styleUrl": "./date-info.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 10
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<p>{{date | date: 'dd MMM yyyy'}}</p>\n<p class=\"hour\">{{date | date: 'h:mm a'}}</p>"
        },
        {
            "name": "DeletePaymentComponent",
            "id": "component-DeletePaymentComponent-5341ba8dee2c7ab468458f96ae42d153cf89070f0b1c4a71fa445c54b4d8589300bf691992a096b930b2820a6fe023cc62d1e83f4d006312a2f2e3c5d01fbef6",
            "file": "src/app/presentation/view/shared/dialogs/delete-payment/delete-payment.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-delete-payment",
            "styleUrls": [
                "./delete-payment.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./delete-payment.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "data",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 16,
                    "decorators": [
                        {
                            "name": "Optional",
                            "stringifiedArguments": ""
                        },
                        {
                            "name": "Inject",
                            "stringifiedArguments": "MAT_DIALOG_DATA"
                        }
                    ],
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "dialogRef",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "MatDialogRef<DeletePaymentComponent>",
                    "optional": false,
                    "description": "",
                    "line": 15,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "payment",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "PaymentEntity",
                    "optional": false,
                    "description": "",
                    "line": 12
                }
            ],
            "methodsClass": [
                {
                    "name": "close",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 24,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 21,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Inject, OnInit, Optional } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { PaymentEntity } from 'src/app/domain/interfaces/entity/payment-entity';\n\n@Component({\n  selector: 'app-delete-payment',\n  templateUrl: './delete-payment.component.html',\n  styleUrls: ['./delete-payment.component.scss']\n})\nexport class DeletePaymentComponent implements OnInit {\n\n  payment: PaymentEntity;\n\n  constructor(\n    public dialogRef: MatDialogRef<DeletePaymentComponent>,\n    @Optional() @Inject(MAT_DIALOG_DATA) public data: any\n  ) {\n    this.payment = data?.payment;\n  }\n\n  ngOnInit(): void {\n  }\n\n  close(): void {\n    this.dialogRef.close();\n  }\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".payment-info {\r\n    display: flex;\r\n    flex-direction: column;\r\n    margin: 50px 0px;\r\n    gap: 10px;\r\n}\r\n\r\n.dialog-actions {\r\n    display: flex;\r\n\r\n    button:first-of-type {\r\n        margin-right: 20px;\r\n    }\r\n}",
                    "styleUrl": "./delete-payment.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "dialogRef",
                        "type": "MatDialogRef<DeletePaymentComponent>",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "data",
                        "type": "any",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 12,
                "jsdoctags": [
                    {
                        "name": "dialogRef",
                        "type": "MatDialogRef<DeletePaymentComponent>",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "data",
                        "type": "any",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<h3 mat-dialog-tile>Excluir pagamento</h3>\n<div mat-dialog-content class=\"payment-info\">\n    <p>Usuário: {{payment?.user?.name}}</p>\n    <p>Data: {{payment?.date | date: 'DD/MM/AAAA'}}</p>\n    <p>Valor: {{payment?.value | currency: 'BRL': 'symbol': '1.2-2'}}</p>\n</div>\n<div mat-dialog-actions class=\"dialog-actions\">\n    <button mat-raised-button class=\"dialog-actions__button\" (click)=\"close()\">CANCELAR</button>\n    <button mat-raised-button class=\"dialog-actions__button\" type=\"submit\" color=\"primary\">SALVAR</button>\n</div>\n\n"
        },
        {
            "name": "FilterInputComponent",
            "id": "component-FilterInputComponent-3a17a5f6bf0cb1a15aa9de797f0f7963d8985a9de595728828201f36a22ab7ea80c8bf29ed75b15049f945d750ae544a8f8e160d3eab73f76399d5127cbff1a2",
            "file": "src/app/presentation/view/shared/components/filter-input/filter-input.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-filter-input",
            "styleUrls": [
                "./filter-input.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./filter-input.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "filterForm",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FormGroup",
                    "optional": false,
                    "description": "",
                    "line": 11
                }
            ],
            "methodsClass": [
                {
                    "name": "createGroup",
                    "args": [],
                    "optional": false,
                    "returnType": "FormGroup",
                    "typeParameters": [],
                    "line": 24,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 21,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\n\n@Component({\n  selector: 'app-filter-input',\n  templateUrl: './filter-input.component.html',\n  styleUrls: ['./filter-input.component.scss']\n})\nexport class FilterInputComponent implements OnInit {\n\n  filterForm: FormGroup;\n\n  constructor(\n    private formBuilder: FormBuilder\n  ) {\n    this.filterForm = this.formBuilder.group({\n      queryString: ['']\n    });\n  }\n\n  ngOnInit(): void {\n  }\n\n  createGroup(): FormGroup {\n    return this.filterForm;\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import \"../../../../../../variables.scss\";\r\n\r\n.filter {\r\n\r\n    &-group {\r\n        position: relative;\r\n\r\n        &__icon {\r\n            position: absolute;\r\n            top: 50%;\r\n            right: 0;\r\n            transform: translateY(-50%);\r\n            cursor: pointer;\r\n            color: $dark-grey;\r\n        }\r\n    }\r\n\r\n    input {\r\n        width: 100%;\r\n        padding: 0.5rem;\r\n        border: 1px solid $grey;\r\n        border-radius: 6px;\r\n    }\r\n}",
                    "styleUrl": "./filter-input.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "formBuilder",
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 11,
                "jsdoctags": [
                    {
                        "name": "formBuilder",
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"filter\" [formGroup]=\"filterForm\">\n    <div class=\"filter-group\">\n        <mat-icon class=\"filter-group__icon\">search</mat-icon>\n        <input\n            #filterInput\n            type=\"text\"\n            formControlName=\"queryString\"\n            placeholder=\"Pesquise por um usuário\"\n        />\n    </div>\n</div>"
        },
        {
            "name": "FilterTabComponent",
            "id": "component-FilterTabComponent-c4d581ec8f86c0d6eee76b6767acf0aa5afade7716fcf860aac34bacc08b12b585f51be8dfa694716187ee5807e61029dcd64ee4342cc7387a0d9b9da3145c5c",
            "file": "src/app/presentation/view/shared/components/filter-tab/filter-tab.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-filter-tab",
            "styleUrls": [
                "./filter-tab.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./filter-tab.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "totalCount",
                    "defaultValue": "10",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "number",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "filterChanged",
                    "defaultValue": "new EventEmitter<any>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 18,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [
                {
                    "name": "filterForm",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FilterInputComponent",
                    "optional": false,
                    "description": "",
                    "line": 15,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "FilterInputComponent, {static: true}"
                        }
                    ]
                },
                {
                    "name": "filterTabForm",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FormGroup",
                    "optional": false,
                    "description": "",
                    "line": 20,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "paginatorForm",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "PaginatorComponent",
                    "optional": false,
                    "description": "",
                    "line": 16,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "PaginatorComponent, {static: true}"
                        }
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 25,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onChanges",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 34,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, OnInit, Output, ViewChild, EventEmitter } from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport { FilterInputComponent } from '../filter-input/filter-input.component';\nimport { PaginatorComponent } from '../paginator/paginator.component';\n\n@Component({\n  selector: 'app-filter-tab',\n  templateUrl: './filter-tab.component.html',\n  styleUrls: ['./filter-tab.component.scss']\n})\nexport class FilterTabComponent implements OnInit {\n\n  @Input() totalCount: number = 10;\n\n  @ViewChild(FilterInputComponent, { static: true }) filterForm!: FilterInputComponent;\n  @ViewChild(PaginatorComponent, { static: true }) paginatorForm!: PaginatorComponent;\n\n  @Output() filterChanged = new EventEmitter<any>();\n\n  public filterTabForm!: FormGroup;\n  constructor(\n    private formBuilder: FormBuilder\n  ) { }\n\n  ngOnInit(): void {\n    this.filterTabForm = this.formBuilder.group({\n      filter: this.filterForm.createGroup(),\n      paginator: this.paginatorForm.createGroup(),\n    });\n\n    this.onChanges();\n  }\n\n  onChanges(): void {\n    this.filterTabForm.valueChanges.subscribe((value) => {\n      this.filterChanged.emit(value);\n    });\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import \"../../../../../../variables.scss\";\r\n\r\n.filter-tab {\r\n    width: 100%;\r\n    display: flex;\r\n    flex-direction: row;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    padding: 0.5rem;\r\n    background-color: $white;\r\n    border-radius: 8px 8px 0 0;\r\n\r\n    &__input{\r\n        width: 215px;\r\n    }\r\n}",
                    "styleUrl": "./filter-tab.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "formBuilder",
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 20,
                "jsdoctags": [
                    {
                        "name": "formBuilder",
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"filter-tab\" [formGroup]=\"filterTabForm\">\n    <app-filter-input class=\"filter-tab__input\"></app-filter-input>\n    <app-paginator\n        [totalCount]=\"totalCount\"\n        [pageSizeOptions]=\"[10, 50, 100]\" \n        aria-label=\"Select page\">\n    </app-paginator>\n</div>"
        },
        {
            "name": "HeaderComponent",
            "id": "component-HeaderComponent-53d694eead642250feebb8ac849081d5fcec01294a83ee6c8e5335fde5032a6da0f7c5d9a2245f1fc0039dce63326e067a4dd3e15a074cf9d0e540e13a73e60c",
            "file": "src/app/presentation/view/shared/components/header/header.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-header",
            "styleUrls": [
                "./header.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./header.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "variant",
                    "defaultValue": "'1'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 14,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.scss']\n})\nexport class HeaderComponent implements OnInit {\n\n  @Input() variant: string = '1';\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".header {\r\n    &-1 {\r\n        font-size: 36px;\r\n        line-height: 43px;\r\n        margin-bottom: 0px;\r\n    }\r\n\r\n    &-2 {\r\n        font-size: 30px;\r\n        line-height: 36px;\r\n        margin-bottom: 0px;\r\n    }\r\n}",
                    "styleUrl": "./header.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 10
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<h1 [class]=\"'header-' + [variant]\"><ng-content></ng-content></h1>\n"
        },
        {
            "name": "LaunchComponent",
            "id": "component-LaunchComponent-0c90a431926f893bfd073cbce18d361ba11ebffb58f3c4b3de18cde9a19bcc92ad4d70a745285773ecb7571095def46470eed313c9ef0be49c417a8e5786dd35",
            "file": "src/app/presentation/view/shared/dialogs/launch/launch.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-launch",
            "styleUrls": [
                "./launch.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./launch.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "component",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "ComponentType<>",
                    "decorators": []
                },
                {
                    "name": "config",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "MatDialogConfig",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "result",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 15
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 21,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "openDialog",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 24,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ComponentType } from '@angular/cdk/overlay';\nimport { Component, Input, OnInit } from '@angular/core';\nimport { MatDialog, MatDialogConfig } from '@angular/material/dialog';\n\n@Component({\n  selector: 'app-launch',\n  templateUrl: './launch.component.html',\n  styleUrls: ['./launch.component.scss']\n})\nexport class LaunchComponent implements OnInit {\n\n  @Input() component!: ComponentType<unknown>;\n  @Input() config!: MatDialogConfig;\n  \n  result: any;\n\n  constructor(\n      private matDialog: MatDialog\n  ) {}\n\n  ngOnInit(): void {\n  }\n\n  openDialog() {\n      this.matDialog.open(this.component, this.config)\n      .afterClosed().subscribe(value => {\n        this.result = value;\n          console.log(`Dialog sent: ${JSON.stringify(value)}`);\n      }); \n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./launch.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "matDialog",
                        "type": "MatDialog",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 15,
                "jsdoctags": [
                    {
                        "name": "matDialog",
                        "type": "MatDialog",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<p>launch works!</p>\n"
        },
        {
            "name": "LaunchDialogComponent",
            "id": "component-LaunchDialogComponent-45ca082b5ac856bbc19b4da5a535c3a78c02c4c8b191c08ce24d01001ec6d3344d4a5b2614d0731b1fbe89030ddee96005e976cbd41f775ede4c7f2614e88314",
            "file": "src/app/presentation/view/shared/dialogs/add-payment/add-payment.stories.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-launcher",
            "styleUrls": [],
            "styles": [],
            "template": "<button mat-raised-button color=\"primary\" (click)=\"openDialog()\"> Launch </button>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "payment",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 18,
                    "type": "PaymentEntity",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "openDialog",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 24,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input } from \"@angular/core\";\r\nimport { MatDialog } from \"@angular/material/dialog\";\r\nimport { moduleMetadata, Story } from \"@storybook/angular\";\r\nimport { AppModule } from \"src/app/app.module\";\r\nimport { PaymentEntity } from \"src/app/domain/interfaces/entity/payment-entity\";\r\nimport { SharedModule } from \"../../shared.module\";\r\nimport { AddPaymentComponent } from \"./add-payment.component\";\r\n\r\n\r\n@Component({\r\n    selector: 'app-launcher',\r\n    template: `\r\n        <button mat-raised-button color=\"primary\" (click)=\"openDialog()\"> Launch </button>\r\n    `,\r\n})\r\nclass LaunchDialogComponent {\r\n\r\n    @Input() payment!: PaymentEntity;\r\n    \r\n    constructor(\r\n        private matDialog: MatDialog\r\n    ) {}\r\n\r\n    openDialog() {\r\n        this.matDialog.open(AddPaymentComponent, {\r\n            width: '772px',\r\n            data: {\r\n                payment: this.payment\r\n            }\r\n        })\r\n        .afterClosed().subscribe(value => {\r\n            console.log(`Dialog sent: ${JSON.stringify(value)}`);\r\n        }); \r\n    }\r\n}\r\n\r\nexport default {\r\n    title: 'Dialogs/Payment',\r\n    component: LaunchDialogComponent,\r\n    decorators: [\r\n        moduleMetadata({\r\n            imports: [SharedModule],\r\n        })\r\n    ]\r\n}\r\n\r\nconst Template: Story = args => ({\r\n    props: {\r\n        ...args\r\n    }\r\n})\r\n\r\nexport const AddDialog = Template.bind({});\r\nexport const EditDialog = Template.bind({});\r\nEditDialog.args = {\r\n    payment: {\r\n        user: { \r\n            name: 'John Doe',\r\n            nick: 'John',\r\n            title: 'titulozinho'\r\n        },\r\n        date: new Date(),\r\n        value: 100\r\n    }\r\n};",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "matDialog",
                        "type": "MatDialog",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 18,
                "jsdoctags": [
                    {
                        "name": "matDialog",
                        "type": "MatDialog",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            }
        },
        {
            "name": "LaunchDialogComponent",
            "id": "component-LaunchDialogComponent-230821f4d42219f0976d3765fe26a0442104789a22b14f100f6a241c6a9eaef04b31c6b22a54a7282d2a30530c9b65631ff8526ea2b08084b17e6a5449d92514-1",
            "file": "src/app/presentation/view/shared/dialogs/delete-payment/delete-payment.stories.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-launcher",
            "styleUrls": [],
            "styles": [],
            "template": "<button mat-raised-button color=\"primary\" (click)=\"openDialog()\"> Launch </button>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "payment",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 18,
                    "type": "PaymentEntity",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "openDialog",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 23,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input } from \"@angular/core\";\r\nimport { MatDialog } from \"@angular/material/dialog\";\r\nimport { moduleMetadata, Story } from \"@storybook/angular\";\r\nimport { AppModule } from \"src/app/app.module\";\r\nimport { PaymentEntity } from \"src/app/domain/interfaces/entity/payment-entity\";\r\nimport { SharedModule } from \"../../shared.module\";\r\nimport { DeletePaymentComponent } from \"./delete-payment.component\";\r\n\r\n\r\n@Component({\r\n    selector: 'app-launcher',\r\n    template: `\r\n        <button mat-raised-button color=\"primary\" (click)=\"openDialog()\"> Launch </button>\r\n    `,\r\n})\r\nclass LaunchDialogComponent {\r\n\r\n    @Input() payment!: PaymentEntity;\r\n\r\n    constructor(private matDialog: MatDialog) {\r\n    }\r\n\r\n    openDialog() {\r\n        this.matDialog.open(DeletePaymentComponent, {\r\n            width: '405px',\r\n            data: {\r\n                payment: this.payment\r\n            }\r\n        });\r\n    }\r\n}\r\n\r\nexport default {\r\n    title: 'Dialogs/DeletePayment',\r\n    component: LaunchDialogComponent,\r\n    decorators: [\r\n        moduleMetadata({\r\n            imports: [SharedModule],\r\n        })\r\n    ]\r\n}\r\n\r\nconst Template: Story = args => ({\r\n    props: {\r\n        ...args\r\n    }\r\n})\r\n\r\nexport const Default = Template.bind({});\r\nDefault.args = {\r\n    payment: {\r\n        user: {\r\n            name: 'John Doe',\r\n            nick: 'John',\r\n            email: 'email@email.com',\r\n            title: 'titulozinho'\r\n        },\r\n        date: new Date(),\r\n        value: 100\r\n    }\r\n};",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "matDialog",
                        "type": "MatDialog",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 18,
                "jsdoctags": [
                    {
                        "name": "matDialog",
                        "type": "MatDialog",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "isDuplicate": true,
            "duplicateId": 1,
            "duplicateName": "LaunchDialogComponent-1"
        },
        {
            "name": "LoginComponent",
            "id": "component-LoginComponent-29f37193c1c24bc1d456eaa035a5269db52434324724f197525a7090988cb8c26724a6a58dca2e0f63ad302e8377f139dc0f42023ca8855e8897e6442fce53d1",
            "file": "src/app/presentation/view/pages/login/login.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-login",
            "styleUrls": [
                "./login.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./login.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "hidePassword",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 15
                },
                {
                    "name": "loginForm",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FormGroup",
                    "optional": false,
                    "description": "",
                    "line": 14
                }
            ],
            "methodsClass": [
                {
                    "name": "login",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 36,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "loginResponse",
                    "args": [
                        {
                            "name": "user",
                            "type": "UserEntity",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 41,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "user",
                            "type": "UserEntity",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 29,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "togglePasswordVisibility",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 32,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { UserEntity } from 'src/app/domain/entity/user-entity';\nimport { IUsersController } from 'src/app/domain/interfaces/controllers/iusers-controller';\nimport { AuthService } from 'src/app/infra/auth/auth.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss'],\n})\nexport class LoginComponent implements OnInit {\n  loginForm: FormGroup;\n  hidePassword: boolean = true;\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private router: Router,\n    private userController: IUsersController,\n    private authService: AuthService\n  ) {\n    this.loginForm = this.formBuilder.group({\n      email: ['', [Validators.required, Validators.email]],\n      password: ['', Validators.required],\n    });\n  }\n\n  ngOnInit(): void {\n  }\n\n  togglePasswordVisibility() {\n    this.hidePassword = !this.hidePassword;\n  }\n\n  login(): void {\n    this.userController.login(this.loginForm.value)\n      .subscribe((user: UserEntity) => this.loginResponse(user));\n  }\n\n  loginResponse(user: UserEntity): void {\n    if (user) {\n      this.authService.credentials = user;\n      this.router.navigateByUrl('/');\n    } else {\n      console.log('error');\n    }\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import \"../../../../../variables.scss\";\r\n\r\n.container {\r\n    height: 100vh;\r\n    display: flex;\r\n}\r\n\r\n.login {\r\n    height: 100vh;\r\n    padding: 20px;\r\n    width: 540px;\r\n\r\n    &__form {\r\n        width: 326px;\r\n        position: relative;\r\n        top: 50%;\r\n        left: 50%;\r\n        transform: translate(-50%, -50%);\r\n        display: flex;\r\n        flex-direction: column;\r\n        justify-content: center;\r\n\r\n        .logo {\r\n            margin-bottom: 18px;\r\n        }\r\n    }\r\n\r\n    @media screen and (max-width: $medium) {\r\n        width: 100%;\r\n    }\r\n\r\n    @media screen and (max-width: $small) {\r\n        width: 100%;\r\n        padding: 10px;\r\n\r\n        &__form {\r\n            width: 100%;\r\n        }\r\n    }\r\n}\r\n\r\n.slide {\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: #FFF;\r\n\r\n    &__img {\r\n    position: relative;\r\n    max-width: 737px;\r\n    top: 50%;\r\n    left: 50%;\r\n    transform: translate(-50%, -50%);\r\n    }\r\n\r\n    @media screen and (max-width: $medium) {\r\n        display: none;\r\n    }\r\n\r\n    @media screen and (max-width: $small) {\r\n        display: none;\r\n    }\r\n}",
                    "styleUrl": "./login.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "formBuilder",
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "userController",
                        "type": "IUsersController",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "authService",
                        "type": "AuthService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 15,
                "jsdoctags": [
                    {
                        "name": "formBuilder",
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "userController",
                        "type": "IUsersController",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "authService",
                        "type": "AuthService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"container\">\n\n    <div class=\"login\">\n\n        <form class=\"login__form\" [formGroup]=\"loginForm\">\n            <app-logo class=\"logo\"></app-logo>\n\n            <app-header variant=\"2\">Bem vindo de volta</app-header>\n\n            <mat-form-field appearance=\"outline\">\n                <mat-label>Email</mat-label>\n                <input matInput type=\"email\" formControlName=\"email\" name=\"email\">\n            </mat-form-field>\n\n            <mat-form-field appearance=\"outline\">\n                <mat-label>Senha</mat-label>\n                <input matInput [type]=\"hidePassword ? 'password' : 'text'\" formControlName=\"password\" name=\"password\">\n                <mat-icon matSuffix (click)=\"togglePasswordVisibility()\">{{hidePassword ? 'visibility_off' : 'visibility'}}</mat-icon>\n            </mat-form-field>\n\n            <button mat-raised-button color=\"primary\" type=\"submit\" (click)=\"login()\">Entrar</button>\n        </form>\n\n    </div>\n\n    <div class=\"slide\">\n        <img class=\"slide__img\" src=\"assets/img/man-doing-online-payment.svg\" alt=\"Homem fazendo pagamento online\">\n    </div>\n</div>"
        },
        {
            "name": "LogoComponent",
            "id": "component-LogoComponent-d93fd7e8d208803b58f323606beb99f715ff2d05a8b4d160750b23711ab4eca08dc2e63f4deeb93c2c3b54d7a0e01c9b97a04dd7bde009fdf8e94dd28e3d4341",
            "file": "src/app/presentation/view/shared/components/logo/logo.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-logo",
            "styleUrls": [
                "./logo.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./logo.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "variant",
                    "defaultValue": "'default'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 14,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-logo',\n  templateUrl: './logo.component.html',\n  styleUrls: ['./logo.component.scss']\n})\nexport class LogoComponent implements OnInit {\n\n  @Input() variant: string = 'default';\n\n  constructor() {}\n\n  ngOnInit(): void {\n  }\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import \"../../../../../../variables.scss\";\r\n\r\n.logo {\r\n    size: 24px;\r\n    line-height: 30px;\r\n    color: $white;\r\n    margin-bottom: 0px;\r\n\r\n    &-blue {\r\n        & span:first-of-type {\r\n            color: $dark-blue;\r\n        }\r\n\r\n        & span:last-of-type {\r\n            color: $blue;\r\n        }\r\n    }\r\n\r\n    &__light {\r\n        font-weight: 400;\r\n    }\r\n\r\n    &__bold {\r\n        font-weight: 800;\r\n    }\r\n}",
                    "styleUrl": "./logo.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 10
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<h2 [class]=\"'logo ' + [variant == 'default' ? 'logo-blue' : '']\">\n    <span class=\"logo__bold\">Pay</span>\n    <span class=\"logo__light\">Friends</span>\n</h2>\n"
        },
        {
            "name": "NavBarComponent",
            "id": "component-NavBarComponent-a0ba68fe9080316cbc79d1525bc4bb89557f05b6adedcd500602ef1fc278f45d42275d5cb22cafc76579d4be8ad4db327cb7e42ad642cf42ca65e76ff3446c54",
            "file": "src/app/presentation/view/shared/components/nav-bar/nav-bar.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-nav-bar",
            "styleUrls": [
                "./nav-bar.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./nav-bar.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 12,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-nav-bar',\n  templateUrl: './nav-bar.component.html',\n  styleUrls: ['./nav-bar.component.scss']\n})\nexport class NavBarComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import '../../../../../../variables.scss';\r\n\r\n.nav-bar {\r\n    display: flex;\r\n    flex-direction: row;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    padding: 30px;\r\n    background-color: $dark-blue;\r\n    box-shadow: 0px 0px 5px rgba(0, 0, 0, 0.1);\r\n}",
                    "styleUrl": "./nav-bar.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 8
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"nav-bar\">\n    <div class=\"nav-bar__logo\">\n        <app-logo variant=\"light\"></app-logo>\n    </div>\n    <div class=\"nav-bar__avatar\">\n        <app-avatar></app-avatar>\n    </div>\n</div>\n"
        },
        {
            "name": "PaginatorComponent",
            "id": "component-PaginatorComponent-81f5f29cfd1fd7002628076f4a36d6c23df6732e673cae3d97b3fa71c6e5b5be4899d363b120baffc8a22e28d23a3115e2444ca87b58b351d7e895e9c4564542",
            "file": "src/app/presentation/view/shared/components/paginator/paginator.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-paginator",
            "styleUrls": [
                "./paginator.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./paginator.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "currentPageSizeOption",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "page",
                    "defaultValue": "1",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "pageSizeOptions",
                    "defaultValue": "[10, 25, 100]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "number[]",
                    "decorators": []
                },
                {
                    "name": "totalCount",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "number",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "pageLinks",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "(string | number)[]",
                    "optional": false,
                    "description": "",
                    "line": 16
                },
                {
                    "name": "paginatorForm",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FormGroup",
                    "optional": false,
                    "description": "",
                    "line": 17
                }
            ],
            "methodsClass": [
                {
                    "name": "changePageSize",
                    "args": [
                        {
                            "name": "pageSize",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 88,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "pageSize",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "createGroup",
                    "args": [],
                    "optional": false,
                    "returnType": "FormGroup",
                    "typeParameters": [],
                    "line": 27,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "getPageLinks",
                    "args": [],
                    "optional": false,
                    "returnType": "[]",
                    "typeParameters": [],
                    "line": 35,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "nextPage",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 74,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnChanges",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 31,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "previousPage",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 81,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "setPage",
                    "args": [
                        {
                            "name": "page",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 66,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "page",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, OnChanges } from '@angular/core';\nimport { FormGroup, FormBuilder } from '@angular/forms';\n\n@Component({\n  selector: 'app-paginator',\n  templateUrl: './paginator.component.html',\n  styleUrls: ['./paginator.component.scss']\n})\nexport class PaginatorComponent implements OnChanges {\n\n  @Input() page: number = 1;\n  @Input() totalCount: number = 0;\n  @Input() pageSizeOptions: number[] = [10, 25, 100];\n  @Input() currentPageSizeOption: number;\n\n  pageLinks: (string | number)[] = [];\n  paginatorForm: FormGroup;\n\n  constructor(private fb: FormBuilder) {\n    this.currentPageSizeOption = this.pageSizeOptions[0];\n    this.paginatorForm = this.fb.group({\n      page: [this.page],\n      pageSize: [this.currentPageSizeOption]\n    });\n  }\n\n  createGroup(): FormGroup {\n    return this.paginatorForm;\n  }\n\n  ngOnChanges(): void {\n    this.pageLinks = this.getPageLinks();\n  }\n\n  getPageLinks(): (string | number)[] {\n    var current = this.page,\n        last = this.totalCount / this.currentPageSizeOption,\n        delta = 2,\n        left = current - delta,\n        right = current + delta + 1,\n        range = [],\n        rangeWithDots = [],\n        l;\n\n    for (let i = 1; i <= last; i++) {\n        if (i == 1 || i == last || i >= left && i < right) {\n            range.push(i);\n        }\n    }\n\n    for (let i of range) {\n        if (l) {\n            if (i - l === 2) {\n                rangeWithDots.push(l + 1);\n            } else if (i - l !== 1) {\n                rangeWithDots.push('...');\n            }\n        }\n        rangeWithDots.push(i);\n        l = i;\n    }\n\n    return rangeWithDots;\n  }\n\n  setPage(page: any): void {\n    if(page === '...') return;\n    if(typeof page === 'string') page = parseInt(page);\n    this.page = page;\n    this.paginatorForm.patchValue({ page: this.page });\n    this.pageLinks = this.getPageLinks();\n  }\n\n  nextPage(): void {\n    if(this.page === (this.totalCount / this.currentPageSizeOption)) return;\n    this.page++;\n    this.paginatorForm.patchValue({ page: this.page });\n    this.pageLinks = this.getPageLinks();\n  }\n\n  previousPage(): void {\n    if(this.page === 1) return;\n    this.page--;\n    this.paginatorForm.patchValue({ page: this.page });\n    this.pageLinks = this.getPageLinks();\n  }\n\n  changePageSize(pageSize: string): void {\n    this.currentPageSizeOption = parseInt(pageSize);\n    this.pageLinks = this.getPageLinks();\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import \"../../../../../../variables.scss\";\r\n\r\n.paginator {\r\n    display: flex;\r\n    flex-direction: row;\r\n    font-size: 12px;\r\n    line-height: 14px;\r\n    font-weight: 700;\r\n    color: $dark-grey;\r\n\r\n    &__select {\r\n        border: 1px solid $grey;\r\n        border-radius: 6px;\r\n        margin-right: 35px;\r\n\r\n        &-label {\r\n            padding: 0 10px;\r\n            align-self: center;\r\n        }\r\n    }\r\n\r\n    &__icon {\r\n        cursor: pointer;\r\n\r\n        &--disabled {\r\n            cursor: not-allowed;\r\n            opacity: 0.5;\r\n        }\r\n    }\r\n\r\n    &__link {\r\n        cursor: pointer;\r\n        padding: 4px 6px;\r\n    }\r\n\r\n    &__link-active {\r\n        color: $white;\r\n        background-color: $blue;\r\n        border-radius: 6px;\r\n    }\r\n}\r\n\r\nul {\r\n    display: flex;\r\n    align-items: center;\r\n    list-style: none;\r\n    margin: 0;\r\n    padding: 0;\r\n\r\n    li {\r\n        display: inline-block;\r\n        margin-right: 10px;\r\n\r\n        &:last-of-type {\r\n            margin-right: 0;\r\n        }\r\n    }\r\n}",
                    "styleUrl": "./paginator.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "fb",
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 17,
                "jsdoctags": [
                    {
                        "name": "fb",
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnChanges"
            ],
            "templateData": "<div class=\"paginator\" [formGroup]=\"paginatorForm\">\n    <label for=\"pageOptions\" class=\"paginator__select-label\">Exibir</label>\n    <select \n        #pageOptions \n        class=\"paginator__select\" \n        formControlName=\"pageSize\" \n        (change)=\"changePageSize(pageOptions.value)\">\n    >\n        <option \n            *ngFor=\"let option of pageSizeOptions; index as i;\" \n            [value]=\"option\"\n            [selected]=\"option === currentPageSizeOption\"\n        >{{ option }}\n        </option>\n    </select>\n\n    <mat-icon \n        [class]=\"'paginator__icon' + [page === 1 ? '--disabled' : '']\"\n        (click)=\"previousPage()\"\n    >navigate_before</mat-icon>\n    <ul>\n        <li\n            *ngFor=\"let link of pageLinks; let i = index\"\n            [class]=\"'paginator__link ' + [link == page ? 'paginator__link-active' : '']\"\n            (click)=\"setPage(link)\"\n        >{{link}}</li>\n    </ul>\n    <mat-icon\n        [class]=\"'paginator__icon' + [page === (totalCount / currentPageSizeOption) ? '--disabled' : '']\"\n        class=\"paginator__icon\"\n        (click)=\"nextPage()\"\n    >navigate_next</mat-icon>\n</div>\n"
        },
        {
            "name": "PaymentsComponent",
            "id": "component-PaymentsComponent-41afe7e6b25a399b22a4a542178f08d22f13914da17b5f547628583d54a50d3c309f081b76d67972acb5c475b4e67fdb02f865f1d3d7e8e1180ade3d1108f673",
            "file": "src/app/presentation/view/pages/payments/payments.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-payments",
            "styleUrls": [
                "./payments.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./payments.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "filterString",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 16
                },
                {
                    "name": "paginatorOptions",
                    "defaultValue": "{pageNumber: 1, pageSize: 10}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type",
                    "optional": false,
                    "description": "",
                    "line": 15
                },
                {
                    "name": "payments",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "PaymentEntity[]",
                    "optional": false,
                    "description": "",
                    "line": 14
                }
            ],
            "methodsClass": [
                {
                    "name": "filterChanged",
                    "args": [
                        {
                            "name": "value",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 44,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getPayments",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 27,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 23,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "openAddPaymentDialog",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 33,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit, ViewChild } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { IPaymentsController } from 'src/app/domain/interfaces/controllers/ipayments-controller';\nimport { PaymentEntity } from 'src/app/domain/interfaces/entity/payment-entity';\nimport { AddPaymentComponent } from '../../shared/dialogs/add-payment/add-payment.component';\n\n@Component({\n  selector: 'app-payments',\n  templateUrl: './payments.component.html',\n  styleUrls: ['./payments.component.scss'],\n})\nexport class PaymentsComponent implements OnInit {\n\n  payments: PaymentEntity[] = [];\n  paginatorOptions: {pageNumber: number, pageSize: number} = {pageNumber: 1, pageSize: 10};\n  filterString: string = '';\n\n  constructor(\n    private matDialog: MatDialog,\n    private paymentsController: IPaymentsController,\n  ) { }\n\n  ngOnInit(): void {\n    this.getPayments();\n  }\n\n  getPayments(): void {\n    this.paymentsController.getPayments().subscribe((payments) => {\n      this.payments = payments;\n    });\n  }\n\n  openAddPaymentDialog() {\n    this.matDialog\n      .open(AddPaymentComponent, {\n        width: '772px',\n      })\n      .afterClosed()\n      .subscribe((value) => {\n        console.log(`Dialog sent: ${JSON.stringify(value)}`);\n      });\n  }\n\n  filterChanged(value: any): void {\n    this.filterString = value.filter.queryString;\n    this.paginatorOptions = value.paginator;\n\n    console.log('paginatorOptions', this.paginatorOptions);\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".container {\r\n  margin: 48px;\r\n  margin-top: 65px;\r\n\r\n  .row {\r\n    display: flex;\r\n    flex-direction: row;\r\n    margin-bottom: 20px;\r\n  \r\n    .add--button {\r\n      align-self: center;\r\n      margin-left: auto;\r\n    }\r\n  }\r\n}",
                    "styleUrl": "./payments.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "matDialog",
                        "type": "MatDialog",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "paymentsController",
                        "type": "IPaymentsController",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 16,
                "jsdoctags": [
                    {
                        "name": "matDialog",
                        "type": "MatDialog",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "paymentsController",
                        "type": "IPaymentsController",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"container\">\n\n  <div class=\"row\">\n    <app-header>Meus Pagamentos</app-header>\n\n    <div class=\"add--button\">\n      <button mat-raised-button color=\"primary\" (click)=\"openAddPaymentDialog()\">ADICIONAR PAGAMENTO</button>\n    </div>\n  </div>\n\n  <app-filter-tab (filterChanged)=\"filterChanged($event)\" [totalCount]=\"payments.length\"></app-filter-tab>\n  <app-payments-table \n    [payments]=\"payments\"\n    [pageSize]=\"paginatorOptions.pageSize\"\n    [pageNumber]=\"paginatorOptions.pageNumber\"\n  ></app-payments-table>\n</div>\n\n"
        },
        {
            "name": "PaymentsTableComponent",
            "id": "component-PaymentsTableComponent-2790e38d937e294e4f6c00ba18630b3ef4773bb794b8598034b07f7141f1ba685b7e593da9871b8ed314aeb2901e012c615a70d0749590a90e4cbf640a6e0394",
            "file": "src/app/presentation/view/shared/components/payments-table/payments-table.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-payments-table",
            "styleUrls": [
                "./payments-table.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./payments-table.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "pageNumber",
                    "defaultValue": "1",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "pageSize",
                    "defaultValue": "10",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "payments",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "PaymentEntity[]",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "columnMode",
                    "defaultValue": "ColumnMode",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 17
                },
                {
                    "name": "sort",
                    "defaultValue": "{dir: '', prop: ''}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type",
                    "optional": false,
                    "description": "",
                    "line": 18
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 22,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onSort",
                    "args": [
                        {
                            "name": "event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 25,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "toggleStatus",
                    "args": [
                        {
                            "name": "event",
                            "type": "MatCheckboxChange",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "uuid",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 39,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "MatCheckboxChange",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "uuid",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, OnInit } from '@angular/core';\nimport { MatCheckboxChange } from '@angular/material/checkbox';\nimport { ColumnMode } from '@swimlane/ngx-datatable';\nimport { PaymentEntity } from 'src/app/domain/interfaces/entity/payment-entity';\n\n@Component({\n  selector: 'app-payments-table',\n  templateUrl: './payments-table.component.html',\n  styleUrls: ['./payments-table.component.scss'],\n})\nexport class PaymentsTableComponent implements OnInit {\n\n  @Input() payments: PaymentEntity[] = [];\n  @Input() pageNumber: number = 1;\n  @Input() pageSize: number = 10;\n\n  columnMode = ColumnMode;\n  sort: {dir: string, prop: string} = {dir: '', prop: ''};\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n  onSort(event: any) {\n    this.sort = event.sorts[0];\n    console.log('sort', this.sort);\n    let tempData = this.payments.sort((a: any, b: any) => {\n      if (this.sort.dir === 'asc') {\n        return a[this.sort.prop] > b[this.sort.prop] ? 1 : -1;\n        } else {\n          return a[this.sort.prop] < b[this.sort.prop] ? 1 : -1;\n        }\n    });\n\n    this.payments = [...tempData];\n  }\n\n  toggleStatus(event: MatCheckboxChange, uuid: string) {\n    let index = this.payments.findIndex((item: PaymentEntity) => item.uuid === uuid);\n    this.payments[index].status = event.checked;\n    this.payments = [...this.payments];\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import '../../../../../../variables.scss';\r\n\r\n:host ::ng-deep .ngx-datatable.table {\r\n    width: 100%;\r\n    background-color: $white;\r\n    text-align: left;\r\n    border-collapse: collapse;\r\n    border-radius: 0 0 8px 8px;\r\n\r\n    .datatable-header {\r\n        border-bottom: 2px solid #CFDCE5;\r\n        padding: 17px 12px;\r\n    }\r\n\r\n    .datatable-body {\r\n\r\n        .datatable-row-wrapper {\r\n            padding: 17px 12px;\r\n\r\n            .mat-icon {\r\n                cursor: pointer;\r\n            }\r\n\r\n            .mat-icon:first-of-type {\r\n                margin-right: 10px;\r\n            }\r\n\r\n            .datatable-body-cell:last-of-type {\r\n                text-align: right;\r\n                padding-right: 60px;\r\n            }\r\n        }\r\n\r\n        .datatable-row-wrapper:nth-child(even) {\r\n            background-color: #F5F8FA;\r\n        }\r\n    }\r\n\r\n    .empty-row {\r\n        padding: 17px 12px;\r\n    }\r\n}\r\n",
                    "styleUrl": "./payments-table.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 18
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<ngx-datatable\n    class=\"table\"\n    [rows]=\"payments\"\n    columnMode=\"force\"\n    [headerHeight]=\"50\"\n    [rowHeight]=\"'auto'\"\n    (sort)=\"onSort($event)\"\n    [limit]=\"pageSize\"\n    [offset]=\"pageNumber - 1\"\n    [messages]=\"{emptyMessage: 'Sem pagamentos...'}\"\n>\n    <ngx-datatable-column prop=\"user.name\" name=\"Usuário\">\n        <ng-template let-value=\"value\" let-row=\"row\" ngx-datatable-cell-template>\n            <app-user-info [user]=\"row.user\"></app-user-info>\n        </ng-template>\n    </ngx-datatable-column>\n    <ngx-datatable-column prop=\"user.title\" name=\"Título\">\n        <ng-template let-value=\"value\" ngx-datatable-cell-template>\n            {{value}}\n        </ng-template>\n    </ngx-datatable-column>\n    <ngx-datatable-column prop=\"date\" name=\"Data\">\n        <ng-template let-value=\"value\" ngx-datatable-cell-template>\n            <app-date-info [date]=\"value\"></app-date-info>\n        </ng-template>\n    </ngx-datatable-column>\n    <ngx-datatable-column prop=\"value\" name=\"Valor\">\n        <ng-template let-value=\"value\" ngx-datatable-cell-template>\n            {{value | currency:'BRL'}}\n        </ng-template>\n    </ngx-datatable-column>\n    <ngx-datatable-column prop=\"status\" name=\"Pago\">\n        <ng-template let-value=\"value\" let-row=\"row\"  ngx-datatable-cell-template>\n            <mat-checkbox [checked]=\"value\"  color=\"primary\" (change)=\"toggleStatus($event, row.uuid)\"></mat-checkbox>\n        </ng-template>\n    </ngx-datatable-column>\n    <ngx-datatable-column prop=\"\" name=\"\">\n        <ng-template let-value=\"value\" class=\"action-cell\" ngx-datatable-cell-template>\n            <mat-icon>edit</mat-icon>\n            <mat-icon>highlight_off</mat-icon>\n        </ng-template>\n    </ngx-datatable-column>\n</ngx-datatable>\n"
        },
        {
            "name": "UserInfoComponent",
            "id": "component-UserInfoComponent-c43e114a8a287849ac1eaad488aefa18616c503b413e55b7a23593063e69fc37efccb7dcf05f5acaea7a4e55b13fa44e4187ca012fa24951f907aaebb2e6360f",
            "file": "src/app/presentation/view/shared/components/user-info/user-info.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-user-info",
            "styleUrls": [
                "./user-info.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./user-info.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "user",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "UserEntity",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 16,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, OnInit } from '@angular/core';\nimport { UserEntity } from 'src/app/domain/interfaces/entity/user-entity';\n\n@Component({\n  selector: 'app-user-info',\n  templateUrl: './user-info.component.html',\n  styleUrls: ['./user-info.component.scss']\n})\nexport class UserInfoComponent implements OnInit {\n\n  @Input() user!: UserEntity;\n\n  constructor() {\n  }\n\n  ngOnInit(): void {\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import \"../../../../../../variables.scss\";\r\n\r\n.nickname {\r\n    color: $dark-grey;\r\n    font-size: 14px;\r\n}",
                    "styleUrl": "./user-info.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 11
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<p class=\"username\">{{user?.name}}</p>\n<p class=\"nickname\">@{{user?.nick}}</p>"
        }
    ],
    "modules": [
        {
            "name": "AppMaterialModule",
            "id": "module-AppMaterialModule-d248fe1a19b0884197a2cf65b9dfd528b8e31f3097a3a70a2de8d74c3dafb358209b825c600cf3988b3343bda97ae6ae710211a1ead9750b96ad002708d6f55f",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/app-material.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatNativeDateModule } from '@angular/material/core';\nimport { MatGridListModule } from '@angular/material/grid-list';\nimport { MatDialogModule } from '@angular/material/dialog';\n\n@NgModule({\n  exports: [\n    MatButtonModule,\n    MatInputModule,\n    MatIconModule,\n    MatPaginatorModule,\n    MatCheckboxModule,\n    MatDatepickerModule,\n    MatNativeDateModule,\n    MatGridListModule,\n    MatDialogModule\n  ],\n})\nexport class AppMaterialModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "AppModule",
            "id": "module-AppModule-3943d394e37cd86ecc2def6c3f605f3b2e580dd045144f09821fc6b31735c1b8276e0f5277e2277118db9397a940e29d645a43f432d5f726918a5094471836b6",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/app.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { ServiceWorkerModule } from '@angular/service-worker';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\nimport { AppComponent } from './app.component';\nimport { PresentationModule } from './presentation/presentation.module';\nimport { DataModule } from './data/data.module';\nimport { InfraModule } from './infra/infra.module';\nimport { environment } from 'src/environments/environment';\n\n@NgModule({\n  declarations: [AppComponent],\n  imports: [\n    DataModule,\n    BrowserModule,\n    BrowserAnimationsModule,\n    ServiceWorkerModule.register('ngsw-worker.js', { enabled: environment.production }),\n    InfraModule,\n    PresentationModule,\n  ],\n  providers: [],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "AppComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "DataModule"
                        },
                        {
                            "name": "InfraModule"
                        },
                        {
                            "name": "PresentationModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": [
                        {
                            "name": "AppComponent"
                        }
                    ]
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "BaseModule",
            "id": "module-BaseModule-63cbc4ce34113ccf7b923c0dfa0944bfca3d190425e0365ea00a8ca2451196e4ccef452856bd1c8e15bd1bd8a03e96763343b15416d56fd1763f90d93828ff2b",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/presentation/view/base/base.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\nimport { AppMaterialModule } from 'src/app/app-material.module';\nimport { BaseComponent } from './base.component';\nimport { SharedModule } from '../shared/shared.module';\n\n@NgModule({\n  declarations: [BaseComponent],\n  imports: [\n    CommonModule,\n    RouterModule,\n    AppMaterialModule,\n    SharedModule\n  ]\n})\nexport class BaseModule { }\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "BaseComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "AppMaterialModule"
                        },
                        {
                            "name": "SharedModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "DataModule",
            "id": "module-DataModule-2b563f541edf295b73a34411decd9a8f78684f66a101b603d0e6e78ac7d7c482977fbcc0648f0db6f5a3997832abf80847fb847e4701fd83da0d995586988a0f",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/data/data.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { IPaymentsRepository } from '../domain/interfaces/repositories/ipayments-repository';\nimport { PaymentsRepositoryService } from './repositories/payments/payments-repository.service';\nimport { HttpClientModule } from '@angular/common/http';\nimport { IUsersRepository } from '../domain/interfaces/repositories/iusers-repository';\nimport { UsersRepositoryService } from './repositories/users/users-repository.service';\n\n@NgModule({\n  declarations: [],\n  imports: [CommonModule, HttpClientModule],\n  providers: [\n    { provide: IPaymentsRepository, useClass: PaymentsRepositoryService },\n    { provide: IUsersRepository, useClass: UsersRepositoryService },\n  ],\n})\nexport class DataModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "DomainModule",
            "id": "module-DomainModule-70faa41481dbc0a31c80452dca67c597400f926c7a2d7b9deb4993e55ebad2b4be7d0982e5fa4d7ea308f33654313fd92d988524539741dd4492c3d911c222f9",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/domain/domain.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\n\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule\n  ]\n})\nexport class DomainModule { }\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "InfraModule",
            "id": "module-InfraModule-d7faf2e4ca041d5658e6cebce4727c1c983cf6f18ac61a000e9d5490b5abf7433d0aa24ec7ff7a98624960f3ba40e0342754375bedb835d3aee744a1fdb12dde",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/infra/infra.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { TranslateModule, TranslateLoader } from '@ngx-translate/core';\r\nimport { TranslateHttpLoader } from '@ngx-translate/http-loader';\r\nimport { HttpClient, HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport { HttpInterceptorService } from './http/http-interceptor.service';\r\n\r\n@NgModule({\r\n  declarations: [],\r\n  imports: [\r\n    CommonModule,\r\n    TranslateModule.forRoot({\r\n      loader: {\r\n        provide: TranslateLoader,\r\n        useFactory: (http: HttpClient) => {\r\n          return new TranslateHttpLoader(http);\r\n        },\r\n        deps: [ HttpClient ]\r\n      }\r\n    }),\r\n  ],\r\n  providers: [\r\n    {\r\n      provide: HTTP_INTERCEPTORS,\r\n      useClass: HttpInterceptorService,\r\n      multi: true\r\n    }\r\n  ]\r\n})\r\nexport class InfraModule { }\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": [
                        {
                            "name": "HttpInterceptorService"
                        }
                    ]
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "LoginModule",
            "id": "module-LoginModule-67803a1a00b792be94143fdf640fbd56c0128856516a95efd6ce05ea36a080c7616d3c7321fb4bee555ae70d185c8ff23c72c03fac403bd70e49590e4fc21189",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/presentation/view/pages/login/login.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { LoginComponent } from './login.component';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { SharedModule } from '../../shared/shared.module';\nimport { AppMaterialModule } from 'src/app/app-material.module';\nimport { LoginRoutingModule } from './login-routing.module';\n\n@NgModule({\n  declarations: [LoginComponent],\n  imports: [CommonModule, ReactiveFormsModule, SharedModule, AppMaterialModule, LoginRoutingModule],\n})\nexport class LoginModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "LoginComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "AppMaterialModule"
                        },
                        {
                            "name": "LoginRoutingModule"
                        },
                        {
                            "name": "SharedModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "LoginRoutingModule",
            "id": "module-LoginRoutingModule-15474e767e3788593ac553789b9d107dab6bdf2c7f7c325f34f47ec4bc9536e004606e127e386852c623b6add79c89e5e43e50da33447004b4e34f7712ec0aca",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/presentation/view/pages/login/login-routing.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { LoginComponent } from './login.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: 'login',\r\n    component: LoginComponent,\r\n    data: {\r\n      title: 'Login'\r\n    }\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class LoginRoutingModule { }\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "PagesModule",
            "id": "module-PagesModule-d66644e9c5c435e50ebad18f93e6122d33dae1a12c22297c170abad6f440248746532169892a8576576fa839dbf9ca09806123574d996bc62a99774e2e78d863",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/presentation/view/pages/pages.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { PaymentsModule } from './payments/payments.module';\nimport { LoginModule } from './login/login.module';\nimport { PagesRoutingModule } from './pages-routing.module';\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule,\n    LoginModule,\n    PaymentsModule,\n    PagesRoutingModule,\n  ],\n  exports: [PagesRoutingModule],\n})\nexport class PagesModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "LoginModule"
                        },
                        {
                            "name": "PagesRoutingModule"
                        },
                        {
                            "name": "PaymentsModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "PagesRoutingModule"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "PagesRoutingModule",
            "id": "module-PagesRoutingModule-92f1a5cc89b06b4bac83ac0c18c722f3edab6b79a40342170dae95fc68816d0f0cb8fbd3621af91329870a6c9ef22ff51a44002de725f397b40adf70632251e2",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/presentation/view/pages/pages-routing.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\n\r\nconst routes: Routes = [\r\n  { path: '**', redirectTo: '', pathMatch: 'full' }\r\n];\r\n\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes, { useHash: true })],\r\n  exports: [RouterModule],\r\n})\r\nexport class PagesRoutingModule {}\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "PaymentsModule",
            "id": "module-PaymentsModule-8eaf8cfbe450cf59fa9cbde9c7dd0b3b7eed20c9ad4b23b11bc7a8101cf4e173d4a68175f80c899af4066f2b284869e136c0f6587f637673e65b764de3709afd",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/presentation/view/pages/payments/payments.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { PaymentsComponent } from './payments.component';\nimport { SharedModule } from '../../shared/shared.module';\nimport { AppMaterialModule } from 'src/app/app-material.module';\nimport { PaymentsRoutingModule } from './payments-routing.module';\n\n@NgModule({\n  declarations: [PaymentsComponent],\n  imports: [CommonModule, SharedModule, AppMaterialModule, PaymentsRoutingModule],\n})\nexport class PaymentsModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "PaymentsComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "AppMaterialModule"
                        },
                        {
                            "name": "PaymentsRoutingModule"
                        },
                        {
                            "name": "SharedModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "PaymentsRoutingModule",
            "id": "module-PaymentsRoutingModule-7bb5a99da2437ec9255cfacd349e12760174a09d51e716984b059e07b4ab88fcc288bd6a21fcaa8186e38e7330609ffe81837b9601db11c4ec7a906448395629",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/presentation/view/pages/payments/payments-routing.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { RouteService } from '../route.service';\r\nimport { PaymentsComponent } from './payments.component';\r\n\r\nconst routes: Routes = [\r\n  \"RouteService.withShell([\\\n    { path: '', redirectTo: '/payments', pathMatch: 'full' },\\\n    {\\\n      path: 'payments',\\\n      component: PaymentsComponent,\\\n      data: {\\\n        title: 'Meus Pagamentos'\\\n      }\\\n    }\\\n  ])\"\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class PaymentsRoutingModule { }\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "PresentationModule",
            "id": "module-PresentationModule-9069a8efa60aaab07f3da95d9e1881ccc9b622878dc68ca08c93b54cef0550a39fdbc6031a91e0303d3ebb863898bce95f340c805c27e9ccbd1efa5167b46295",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/presentation/presentation.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { IPaymentsController } from '../domain/interfaces/controllers/ipayments-controller';\nimport { PaymentsControllerService } from './controllers/payments/payments-controller.service';\nimport { ViewModule } from './view/view.module';\nimport { IUsersController } from '../domain/interfaces/controllers/iusers-controller';\nimport { UsersControllerService } from './controllers/users/users-controller.service';\n\n@NgModule({\n  declarations: [],\n  imports: [CommonModule, ViewModule],\n  exports: [ViewModule],\n  providers: [\n    { provide: IPaymentsController, useClass: PaymentsControllerService },\n    { provide: IUsersController, useClass: UsersControllerService },\n  ],\n})\nexport class PresentationModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "ViewModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "ViewModule"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "SharedModule",
            "id": "module-SharedModule-5164fa786f966b6cb9c1cdc6ec08e411c9ef0d7711896eff9778e438afef25ac5a9289c85bead4410ec166b2ab9f1eefd88e7ed7f6790ace175e45b1f9fcd675",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/presentation/view/shared/shared.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { AppMaterialModule } from 'src/app/app-material.module';\r\nimport { FilterTabComponent } from './components/filter-tab/filter-tab.component';\r\nimport { PaymentsTableComponent } from './components/payments-table/payments-table.component';\r\nimport { NavBarComponent } from './components/nav-bar/nav-bar.component';\r\nimport { HeaderComponent } from './components/header/header.component';\r\nimport { LogoComponent } from './components/logo/logo.component';\r\nimport { AvatarComponent } from './components/avatar/avatar.component';\r\nimport { FilterInputComponent } from './components/filter-input/filter-input.component';\r\nimport { PaginatorComponent } from './components/paginator/paginator.component';\r\nimport { UserInfoComponent } from './components/user-info/user-info.component';\r\nimport { NgxDatatableModule } from '@swimlane/ngx-datatable';\r\nimport { DateInfoComponent } from './components/date-info/date-info.component';\r\nimport { AddPaymentComponent } from './dialogs/add-payment/add-payment.component';\r\nimport { DeletePaymentComponent } from './dialogs/delete-payment/delete-payment.component';\r\nimport { FormBuilder, FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { CurrencyMaskModule } from \"ng2-currency-mask\";\r\n\r\n@NgModule({\r\n    declarations: [\r\n        AvatarComponent,\r\n        DateInfoComponent,\r\n        FilterInputComponent,\r\n        FilterTabComponent,\r\n        HeaderComponent,\r\n        LogoComponent,\r\n        NavBarComponent,\r\n        PaymentsTableComponent,\r\n        PaginatorComponent,\r\n        UserInfoComponent,\r\n        AddPaymentComponent,\r\n        DeletePaymentComponent,\r\n    ],\r\n    exports: [\r\n        AvatarComponent,\r\n        DateInfoComponent,\r\n        FilterInputComponent,\r\n        FilterTabComponent,\r\n        HeaderComponent,\r\n        LogoComponent,\r\n        NavBarComponent,\r\n        PaymentsTableComponent,\r\n        PaginatorComponent,\r\n        UserInfoComponent,\r\n    ],\r\n    imports: [\r\n        CommonModule,\r\n        NgxDatatableModule,\r\n        AppMaterialModule,\r\n        ReactiveFormsModule,\r\n        FormsModule,\r\n        BrowserAnimationsModule,\r\n        CurrencyMaskModule,\r\n    ],\r\n    entryComponents: [\r\n        AddPaymentComponent,\r\n        DeletePaymentComponent\r\n    ]\r\n})\r\nexport class SharedModule {}\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "AddPaymentComponent"
                        },
                        {
                            "name": "AvatarComponent"
                        },
                        {
                            "name": "DateInfoComponent"
                        },
                        {
                            "name": "DeletePaymentComponent"
                        },
                        {
                            "name": "FilterInputComponent"
                        },
                        {
                            "name": "FilterTabComponent"
                        },
                        {
                            "name": "HeaderComponent"
                        },
                        {
                            "name": "LogoComponent"
                        },
                        {
                            "name": "NavBarComponent"
                        },
                        {
                            "name": "PaginatorComponent"
                        },
                        {
                            "name": "PaymentsTableComponent"
                        },
                        {
                            "name": "UserInfoComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "AppMaterialModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "AvatarComponent"
                        },
                        {
                            "name": "DateInfoComponent"
                        },
                        {
                            "name": "FilterInputComponent"
                        },
                        {
                            "name": "FilterTabComponent"
                        },
                        {
                            "name": "HeaderComponent"
                        },
                        {
                            "name": "LogoComponent"
                        },
                        {
                            "name": "NavBarComponent"
                        },
                        {
                            "name": "PaginatorComponent"
                        },
                        {
                            "name": "PaymentsTableComponent"
                        },
                        {
                            "name": "UserInfoComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "ViewModule",
            "id": "module-ViewModule-f48bccee613e14177d4aa330819d1114a787f28572e91cb422e1180dad83d1f868c4b6c650f3b4e878a5895e6399926b2c75af32806fae2c5fe02686a5e477c9",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/presentation/view/view.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { PagesModule } from './pages/pages.module';\nimport { SharedModule } from './shared/shared.module';\nimport { BaseModule } from './base/base.module';\n\n@NgModule({\n  declarations: [],\n  imports: [CommonModule, BaseModule, PagesModule, SharedModule],\n  exports: [PagesModule],\n})\nexport class ViewModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "BaseModule"
                        },
                        {
                            "name": "PagesModule"
                        },
                        {
                            "name": "SharedModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "PagesModule"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        }
    ],
    "miscellaneous": {
        "variables": [
            {
                "name": "AddDialog",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/presentation/view/shared/dialogs/add-payment/add-payment.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "context",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/test.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "require.context('./', true, /\\.spec\\.ts$/)"
            },
            {
                "name": "credentialsKey",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/infra/auth/auth.service.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "string",
                "defaultValue": "'credentials'"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/presentation/view/shared/components/avatar/avatar.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "() => ({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/presentation/view/shared/components/filter-input/filter-input.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "() => ({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/presentation/view/shared/components/filter-tab/filter-tab.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "() => ({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/presentation/view/shared/components/logo/logo.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "() => ({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/presentation/view/shared/components/payments-table/payments-table.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/presentation/view/shared/components/paginator/paginator.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "() => ({\r\n    props: {\r\n        page: 1,\r\n        totalCount: 100,\r\n        onChange: (value: any) => console.log(value)\r\n    }\r\n})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/presentation/view/shared/components/nav-bar/nav-bar.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/presentation/view/shared/components/user-info/user-info.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/presentation/view/shared/dialogs/delete-payment/delete-payment.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Display_1",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/presentation/view/shared/components/header/header.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Display_2",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/presentation/view/shared/components/header/header.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "EditDialog",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/presentation/view/shared/dialogs/add-payment/add-payment.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Empty",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/presentation/view/shared/components/payments-table/payments-table.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/environments/environment.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\n  production: false,\n  serverUrl: 'http://localhost:3000',\n  defaultLanguage: 'pt-BR',\n  supportedLanguages: [\n    'pt-BR'\n  ]\n}"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/environments/environment.prod.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\n  production: true,\n  defaultLanguage: 'pt-BR',\n  supportedLanguages: [\n    'pt-BR'\n  ]\n}"
            },
            {
                "name": "languageKey",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/infra/translations/i18n.service.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "string",
                "defaultValue": "'language'"
            },
            {
                "name": "Light",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/presentation/view/shared/components/logo/logo.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "() => ({\r\n    props: {\r\n        variant: 'light'\r\n    }\r\n})"
            },
            {
                "name": "payments",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/presentation/view/shared/components/payments-table/payments-table.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "[]",
                "defaultValue": "[]"
            },
            {
                "name": "require",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/test.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "literal type"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/presentation/view/shared/components/header/header.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<HeaderComponent>",
                "defaultValue": "(args: HeaderComponent) => ({\r\n    props: args,\r\n    template: `\r\n        <app-header [variant]=\"variant\">Texto Aleatório</app-header>\r\n    `\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/presentation/view/shared/components/payments-table/payments-table.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "(args: any) => ({\r\n    props: {\r\n        payments: args.data,\r\n        pageSize: args.pageSize,\r\n        pageNumber: args.pageNumber,\r\n    },\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/presentation/view/shared/components/nav-bar/nav-bar.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "(args: any) => ({})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/presentation/view/shared/components/user-info/user-info.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "args => ({\r\n    props: {\r\n        ...args\r\n    }\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/presentation/view/shared/dialogs/add-payment/add-payment.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "args => ({\r\n    props: {\r\n        ...args\r\n    }\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/presentation/view/shared/dialogs/delete-payment/delete-payment.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "args => ({\r\n    props: {\r\n        ...args\r\n    }\r\n})"
            }
        ],
        "functions": [],
        "typealiases": [],
        "enumerations": [],
        "groupedVariables": {
            "src/app/presentation/view/shared/dialogs/add-payment/add-payment.stories.ts": [
                {
                    "name": "AddDialog",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/presentation/view/shared/dialogs/add-payment/add-payment.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "EditDialog",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/presentation/view/shared/dialogs/add-payment/add-payment.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/presentation/view/shared/dialogs/add-payment/add-payment.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "args => ({\r\n    props: {\r\n        ...args\r\n    }\r\n})"
                }
            ],
            "src/test.ts": [
                {
                    "name": "context",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/test.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "require.context('./', true, /\\.spec\\.ts$/)"
                },
                {
                    "name": "require",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/test.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type"
                }
            ],
            "src/app/infra/auth/auth.service.ts": [
                {
                    "name": "credentialsKey",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/infra/auth/auth.service.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "defaultValue": "'credentials'"
                }
            ],
            "src/app/presentation/view/shared/components/avatar/avatar.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/presentation/view/shared/components/avatar/avatar.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "() => ({})"
                }
            ],
            "src/app/presentation/view/shared/components/filter-input/filter-input.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/presentation/view/shared/components/filter-input/filter-input.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "() => ({})"
                }
            ],
            "src/app/presentation/view/shared/components/filter-tab/filter-tab.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/presentation/view/shared/components/filter-tab/filter-tab.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "() => ({})"
                }
            ],
            "src/app/presentation/view/shared/components/logo/logo.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/presentation/view/shared/components/logo/logo.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "() => ({})"
                },
                {
                    "name": "Light",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/presentation/view/shared/components/logo/logo.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "() => ({\r\n    props: {\r\n        variant: 'light'\r\n    }\r\n})"
                }
            ],
            "src/app/presentation/view/shared/components/payments-table/payments-table.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/presentation/view/shared/components/payments-table/payments-table.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Empty",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/presentation/view/shared/components/payments-table/payments-table.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "payments",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/presentation/view/shared/components/payments-table/payments-table.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "defaultValue": "[]"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/presentation/view/shared/components/payments-table/payments-table.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "(args: any) => ({\r\n    props: {\r\n        payments: args.data,\r\n        pageSize: args.pageSize,\r\n        pageNumber: args.pageNumber,\r\n    },\r\n})"
                }
            ],
            "src/app/presentation/view/shared/components/paginator/paginator.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/presentation/view/shared/components/paginator/paginator.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "() => ({\r\n    props: {\r\n        page: 1,\r\n        totalCount: 100,\r\n        onChange: (value: any) => console.log(value)\r\n    }\r\n})"
                }
            ],
            "src/app/presentation/view/shared/components/nav-bar/nav-bar.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/presentation/view/shared/components/nav-bar/nav-bar.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/presentation/view/shared/components/nav-bar/nav-bar.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "(args: any) => ({})"
                }
            ],
            "src/app/presentation/view/shared/components/user-info/user-info.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/presentation/view/shared/components/user-info/user-info.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/presentation/view/shared/components/user-info/user-info.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "args => ({\r\n    props: {\r\n        ...args\r\n    }\r\n})"
                }
            ],
            "src/app/presentation/view/shared/dialogs/delete-payment/delete-payment.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/presentation/view/shared/dialogs/delete-payment/delete-payment.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/presentation/view/shared/dialogs/delete-payment/delete-payment.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "args => ({\r\n    props: {\r\n        ...args\r\n    }\r\n})"
                }
            ],
            "src/app/presentation/view/shared/components/header/header.stories.ts": [
                {
                    "name": "Display_1",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/presentation/view/shared/components/header/header.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Display_2",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/presentation/view/shared/components/header/header.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/presentation/view/shared/components/header/header.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<HeaderComponent>",
                    "defaultValue": "(args: HeaderComponent) => ({\r\n    props: args,\r\n    template: `\r\n        <app-header [variant]=\"variant\">Texto Aleatório</app-header>\r\n    `\r\n})"
                }
            ],
            "src/environments/environment.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/environments/environment.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\n  production: false,\n  serverUrl: 'http://localhost:3000',\n  defaultLanguage: 'pt-BR',\n  supportedLanguages: [\n    'pt-BR'\n  ]\n}"
                }
            ],
            "src/environments/environment.prod.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/environments/environment.prod.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\n  production: true,\n  defaultLanguage: 'pt-BR',\n  supportedLanguages: [\n    'pt-BR'\n  ]\n}"
                }
            ],
            "src/app/infra/translations/i18n.service.ts": [
                {
                    "name": "languageKey",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/infra/translations/i18n.service.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "defaultValue": "'language'"
                }
            ]
        },
        "groupedFunctions": {},
        "groupedEnumerations": {},
        "groupedTypeAliases": {}
    },
    "routes": {
        "name": "<root>",
        "kind": "module",
        "className": "AppModule",
        "children": [
            {
                "name": "routes",
                "filename": "src/app/presentation/view/pages/login/login-routing.module.ts",
                "module": "LoginRoutingModule",
                "children": [
                    {
                        "path": "login",
                        "component": "LoginComponent",
                        "data": {
                            "title": "Login"
                        }
                    }
                ],
                "kind": "module"
            },
            {
                "name": "routes",
                "filename": "src/app/presentation/view/pages/pages-routing.module.ts",
                "module": "PagesRoutingModule",
                "children": [
                    {
                        "path": "**",
                        "redirectTo": "",
                        "pathMatch": "full"
                    }
                ],
                "kind": "module"
            },
            {
                "name": "routes",
                "filename": "src/app/presentation/view/pages/payments/payments-routing.module.ts",
                "module": "PaymentsRoutingModule",
                "children": [
                    "RouteService.withShell([{path:'',redirectTo:'/payments',pathMatch:'full'},{path:'payments',component:PaymentsComponent,data:{title:'MeusPagamentos'}}])"
                ],
                "kind": "module"
            }
        ]
    },
    "coverage": {
        "count": 0,
        "status": "low",
        "files": [
            {
                "filePath": "src/app/app.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AppComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/data/repositories/payments/payments-repository.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "PaymentsRepositoryService",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/data/repositories/users/users-repository.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "UsersRepositoryService",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/domain/entity/user-entity.ts",
                "type": "class",
                "linktype": "classe",
                "name": "UserEntity",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "src/app/domain/interfaces/controllers/ipayments-controller.ts",
                "type": "class",
                "linktype": "classe",
                "name": "IPaymentsController",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/domain/interfaces/controllers/iusers-controller.ts",
                "type": "class",
                "linktype": "classe",
                "name": "IUsersController",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/domain/interfaces/entity/payment-entity.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "PaymentEntity",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/domain/interfaces/entity/user-entity.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "UserEntity",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/domain/interfaces/repositories/ipayments-repository.ts",
                "type": "class",
                "linktype": "classe",
                "name": "IPaymentsRepository",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/domain/interfaces/repositories/iusers-repository.ts",
                "type": "class",
                "linktype": "classe",
                "name": "IUsersRepository",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/infra/auth/auth.guard.ts",
                "type": "guard",
                "linktype": "guard",
                "name": "AuthGuard",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/infra/auth/auth.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "AuthService",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/infra/auth/auth.service.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "credentialsKey",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/infra/http/http-interceptor.service.ts",
                "type": "interceptor",
                "linktype": "interceptor",
                "name": "HttpInterceptorService",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/infra/translations/i18n.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "I18nService",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/infra/translations/i18n.service.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "languageKey",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/presentation/controllers/payments/payments-controller.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "PaymentsControllerService",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/presentation/controllers/users/users-controller.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "UsersControllerService",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/presentation/view/base/base.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "BaseComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/presentation/view/pages/login/login.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "LoginComponent",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "src/app/presentation/view/pages/payments/payments.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "PaymentsComponent",
                "coveragePercent": 0,
                "coverageCount": "0/9",
                "status": "low"
            },
            {
                "filePath": "src/app/presentation/view/pages/route.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "RouteService",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/presentation/view/shared/components/avatar/avatar.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AvatarComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/presentation/view/shared/components/avatar/avatar.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/presentation/view/shared/components/date-info/date-info.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "DateInfoComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/presentation/view/shared/components/filter-input/filter-input.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "FilterInputComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/presentation/view/shared/components/filter-input/filter-input.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/presentation/view/shared/components/filter-tab/filter-tab.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "FilterTabComponent",
                "coveragePercent": 0,
                "coverageCount": "0/9",
                "status": "low"
            },
            {
                "filePath": "src/app/presentation/view/shared/components/filter-tab/filter-tab.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/presentation/view/shared/components/header/header.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "HeaderComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/presentation/view/shared/components/header/header.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Display_1",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/presentation/view/shared/components/header/header.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Display_2",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/presentation/view/shared/components/header/header.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/presentation/view/shared/components/logo/logo.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "LogoComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/presentation/view/shared/components/logo/logo.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/presentation/view/shared/components/logo/logo.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Light",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/presentation/view/shared/components/nav-bar/nav-bar.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "NavBarComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/presentation/view/shared/components/nav-bar/nav-bar.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/presentation/view/shared/components/nav-bar/nav-bar.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/presentation/view/shared/components/paginator/paginator.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "PaginatorComponent",
                "coveragePercent": 0,
                "coverageCount": "0/15",
                "status": "low"
            },
            {
                "filePath": "src/app/presentation/view/shared/components/paginator/paginator.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/presentation/view/shared/components/payments-table/payments-table.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "PaymentsTableComponent",
                "coveragePercent": 0,
                "coverageCount": "0/10",
                "status": "low"
            },
            {
                "filePath": "src/app/presentation/view/shared/components/payments-table/payments-table.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/presentation/view/shared/components/payments-table/payments-table.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Empty",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/presentation/view/shared/components/payments-table/payments-table.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "payments",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/presentation/view/shared/components/payments-table/payments-table.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/presentation/view/shared/components/user-info/user-info.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "UserInfoComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/presentation/view/shared/components/user-info/user-info.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/presentation/view/shared/components/user-info/user-info.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/presentation/view/shared/dialogs/add-payment/add-payment.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AddPaymentComponent",
                "coveragePercent": 0,
                "coverageCount": "0/10",
                "status": "low"
            },
            {
                "filePath": "src/app/presentation/view/shared/dialogs/add-payment/add-payment.stories.ts",
                "type": "component",
                "linktype": "component",
                "name": "LaunchDialogComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/presentation/view/shared/dialogs/add-payment/add-payment.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "AddDialog",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/presentation/view/shared/dialogs/add-payment/add-payment.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "EditDialog",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/presentation/view/shared/dialogs/add-payment/add-payment.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/presentation/view/shared/dialogs/delete-payment/delete-payment.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "DeletePaymentComponent",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "src/app/presentation/view/shared/dialogs/delete-payment/delete-payment.stories.ts",
                "type": "component",
                "linktype": "component",
                "name": "LaunchDialogComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/presentation/view/shared/dialogs/delete-payment/delete-payment.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/presentation/view/shared/dialogs/delete-payment/delete-payment.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/presentation/view/shared/dialogs/launch/launch.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "LaunchComponent",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "src/environments/environment.prod.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/environments/environment.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/test.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "context",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/test.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "require",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            }
        ]
    }
}